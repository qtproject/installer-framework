// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: eve_public/app/platform.proto

#include "eve_public/app/platform.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_eve_5fpublic_2fapp_2fplatform_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Machine_CPU;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Machine_GPU_Driver;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Machine_HardDrive;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Machine_Monitor;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Machine_NetworkAdapter;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Machine_VM;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OS_GraphicsAPIs;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OS_StreamingService;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OS_Wine;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Process;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SemanticVersion;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Machine_GPU;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_OS;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_eve_5fpublic_2fapp_2fplatform_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_Machine;
}  // namespace protobuf_eve_5fpublic_2fapp_2fplatform_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace eve_public {
namespace app {
namespace platform {
class SemanticVersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SemanticVersion>
      _instance;
} _SemanticVersion_default_instance_;
class OS_GraphicsAPIsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OS_GraphicsAPIs>
      _instance;
} _OS_GraphicsAPIs_default_instance_;
class OS_WineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OS_Wine>
      _instance;
} _OS_Wine_default_instance_;
class OS_StreamingServiceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OS_StreamingService>
      _instance;
} _OS_StreamingService_default_instance_;
class OSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OS>
      _instance;
} _OS_default_instance_;
class Machine_CPUDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Machine_CPU>
      _instance;
} _Machine_CPU_default_instance_;
class Machine_VMDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Machine_VM>
      _instance;
} _Machine_VM_default_instance_;
class Machine_MonitorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Machine_Monitor>
      _instance;
} _Machine_Monitor_default_instance_;
class Machine_GPU_DriverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Machine_GPU_Driver>
      _instance;
} _Machine_GPU_Driver_default_instance_;
class Machine_GPUDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Machine_GPU>
      _instance;
} _Machine_GPU_default_instance_;
class Machine_NetworkAdapterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Machine_NetworkAdapter>
      _instance;
} _Machine_NetworkAdapter_default_instance_;
class Machine_HardDriveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Machine_HardDrive>
      _instance;
} _Machine_HardDrive_default_instance_;
class MachineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Machine>
      _instance;
} _Machine_default_instance_;
class ProcessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Process>
      _instance;
} _Process_default_instance_;
class InformationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Information>
      _instance;
} _Information_default_instance_;
}  // namespace platform
}  // namespace app
}  // namespace eve_public
namespace protobuf_eve_5fpublic_2fapp_2fplatform_2eproto {
static void InitDefaultsSemanticVersion() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_SemanticVersion_default_instance_;
    new (ptr) ::eve_public::app::platform::SemanticVersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::SemanticVersion::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SemanticVersion =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSemanticVersion}, {}};

static void InitDefaultsOS_GraphicsAPIs() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_OS_GraphicsAPIs_default_instance_;
    new (ptr) ::eve_public::app::platform::OS_GraphicsAPIs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::OS_GraphicsAPIs::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OS_GraphicsAPIs =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOS_GraphicsAPIs}, {}};

static void InitDefaultsOS_Wine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_OS_Wine_default_instance_;
    new (ptr) ::eve_public::app::platform::OS_Wine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::OS_Wine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OS_Wine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOS_Wine}, {}};

static void InitDefaultsOS_StreamingService() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_OS_StreamingService_default_instance_;
    new (ptr) ::eve_public::app::platform::OS_StreamingService();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::OS_StreamingService::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OS_StreamingService =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOS_StreamingService}, {}};

static void InitDefaultsOS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_OS_default_instance_;
    new (ptr) ::eve_public::app::platform::OS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::OS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_OS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsOS}, {
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS_GraphicsAPIs.base,
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS_Wine.base,
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS_StreamingService.base,}};

static void InitDefaultsMachine_CPU() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_Machine_CPU_default_instance_;
    new (ptr) ::eve_public::app::platform::Machine_CPU();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::Machine_CPU::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Machine_CPU =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMachine_CPU}, {}};

static void InitDefaultsMachine_VM() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_Machine_VM_default_instance_;
    new (ptr) ::eve_public::app::platform::Machine_VM();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::Machine_VM::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Machine_VM =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMachine_VM}, {}};

static void InitDefaultsMachine_Monitor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_Machine_Monitor_default_instance_;
    new (ptr) ::eve_public::app::platform::Machine_Monitor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::Machine_Monitor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Machine_Monitor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMachine_Monitor}, {}};

static void InitDefaultsMachine_GPU_Driver() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_Machine_GPU_Driver_default_instance_;
    new (ptr) ::eve_public::app::platform::Machine_GPU_Driver();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::Machine_GPU_Driver::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Machine_GPU_Driver =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMachine_GPU_Driver}, {}};

static void InitDefaultsMachine_GPU() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_Machine_GPU_default_instance_;
    new (ptr) ::eve_public::app::platform::Machine_GPU();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::Machine_GPU::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Machine_GPU =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMachine_GPU}, {
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_GPU_Driver.base,}};

static void InitDefaultsMachine_NetworkAdapter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_Machine_NetworkAdapter_default_instance_;
    new (ptr) ::eve_public::app::platform::Machine_NetworkAdapter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::Machine_NetworkAdapter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Machine_NetworkAdapter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMachine_NetworkAdapter}, {}};

static void InitDefaultsMachine_HardDrive() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_Machine_HardDrive_default_instance_;
    new (ptr) ::eve_public::app::platform::Machine_HardDrive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::Machine_HardDrive::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Machine_HardDrive =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMachine_HardDrive}, {}};

static void InitDefaultsMachine() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_Machine_default_instance_;
    new (ptr) ::eve_public::app::platform::Machine();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::Machine::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_Machine =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsMachine}, {
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_CPU.base,
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_VM.base,
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_Monitor.base,
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_GPU.base,
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_NetworkAdapter.base,
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_HardDrive.base,}};

static void InitDefaultsProcess() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_Process_default_instance_;
    new (ptr) ::eve_public::app::platform::Process();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::Process::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Process =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProcess}, {}};

static void InitDefaultsInformation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::eve_public::app::platform::_Information_default_instance_;
    new (ptr) ::eve_public::app::platform::Information();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::eve_public::app::platform::Information::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Information =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsInformation}, {
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_SemanticVersion.base,
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS.base,
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine.base,
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Process.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SemanticVersion.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OS_GraphicsAPIs.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OS_Wine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OS_StreamingService.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Machine_CPU.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Machine_VM.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Machine_Monitor.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Machine_GPU_Driver.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Machine_GPU.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Machine_NetworkAdapter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Machine_HardDrive.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Machine.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Process.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Information.base);
}

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::SemanticVersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::SemanticVersion, major_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::SemanticVersion, minor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::SemanticVersion, patch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::SemanticVersion, prerelease_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::SemanticVersion, build_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS_GraphicsAPIs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS_GraphicsAPIs, metal_supported_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS_GraphicsAPIs, vulkan_supported_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS_GraphicsAPIs, vulkan_highest_supported_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS_GraphicsAPIs, d3d_highest_supported_version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS_Wine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS_Wine, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS_Wine, host_os_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS_StreamingService, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS_StreamingService, provider_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, bitness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, major_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, minor_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, build_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, kernel_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, user_locale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, is_remote_session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, graphics_apis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, wine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::OS, streaming_service_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_CPU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_CPU, bitness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_CPU, logical_core_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_CPU, brand_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_CPU, vendor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_CPU, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_CPU, stepping_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_CPU, architecture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_CPU, extensions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_CPU, frequency_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_VM, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_VM, is_suspected_vm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_VM, has_hypervisor_bit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_VM, hypervisor_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_VM, is_hypervisor_guest_os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_VM, has_vm_execution_timing_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_Monitor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_Monitor, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_Monitor, horizontal_resolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_Monitor, vertical_resolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_Monitor, bits_per_color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_Monitor, refresh_rate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_Monitor, dpi_scaling_percent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU_Driver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU_Driver, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU_Driver, vendor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU_Driver, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU, vendor_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU, device_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU, revision_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU, video_memory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU, driver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_GPU, core_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_NetworkAdapter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_NetworkAdapter, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_NetworkAdapter, mac_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_NetworkAdapter, uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_HardDrive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_HardDrive, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_HardDrive, drive_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine_HardDrive, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, model_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, uuid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, total_memory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, monitor_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, vm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, monitors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, gpus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, network_adapters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, battery_detection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Machine, hard_drives_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Process, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Process, running_under_rosetta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Process, bitness_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Information, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Information, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Information, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Information, process_bitness_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Information, os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Information, machine_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::eve_public::app::platform::Information, process_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::eve_public::app::platform::SemanticVersion)},
  { 10, -1, sizeof(::eve_public::app::platform::OS_GraphicsAPIs)},
  { 19, -1, sizeof(::eve_public::app::platform::OS_Wine)},
  { 26, -1, sizeof(::eve_public::app::platform::OS_StreamingService)},
  { 32, -1, sizeof(::eve_public::app::platform::OS)},
  { 50, -1, sizeof(::eve_public::app::platform::Machine_CPU)},
  { 64, -1, sizeof(::eve_public::app::platform::Machine_VM)},
  { 74, -1, sizeof(::eve_public::app::platform::Machine_Monitor)},
  { 85, -1, sizeof(::eve_public::app::platform::Machine_GPU_Driver)},
  { 93, -1, sizeof(::eve_public::app::platform::Machine_GPU)},
  { 105, -1, sizeof(::eve_public::app::platform::Machine_NetworkAdapter)},
  { 113, -1, sizeof(::eve_public::app::platform::Machine_HardDrive)},
  { 121, -1, sizeof(::eve_public::app::platform::Machine)},
  { 138, -1, sizeof(::eve_public::app::platform::Process)},
  { 145, -1, sizeof(::eve_public::app::platform::Information)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_SemanticVersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_OS_GraphicsAPIs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_OS_Wine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_OS_StreamingService_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_OS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_Machine_CPU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_Machine_VM_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_Machine_Monitor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_Machine_GPU_Driver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_Machine_GPU_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_Machine_NetworkAdapter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_Machine_HardDrive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_Machine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_Process_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::eve_public::app::platform::_Information_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "eve_public/app/platform.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035eve_public/app/platform.proto\022\027eve_pub"
      "lic.app.platform\032\037google/protobuf/timest"
      "amp.proto\"a\n\017SemanticVersion\022\r\n\005major\030\001 "
      "\001(\r\022\r\n\005minor\030\002 \001(\r\022\r\n\005patch\030\003 \001(\r\022\022\n\npre"
      "release\030\004 \001(\t\022\r\n\005build\030\005 \001(\t\"\211\007\n\002OS\022.\n\004t"
      "ype\030\001 \001(\0162 .eve_public.app.platform.OS.K"
      "ind\022\014\n\004name\030\002 \001(\t\0221\n\007bitness\030\003 \001(\0162 .eve"
      "_public.app.platform.Bitness\022\025\n\rmajor_ve"
      "rsion\030\004 \001(\t\022\025\n\rminor_version\030\005 \001(\t\022\024\n\014bu"
      "ild_number\030\006 \001(\t\022\026\n\016kernel_version\030\007 \001(\t"
      "\022\020\n\010username\030\010 \001(\t\022\023\n\013user_locale\030\t \001(\t\022"
      "\031\n\021is_remote_session\030\n \001(\010\022\?\n\rgraphics_a"
      "pis\030\013 \001(\0132(.eve_public.app.platform.OS.G"
      "raphicsAPIs\022.\n\004wine\030\014 \001(\0132 .eve_public.a"
      "pp.platform.OS.Wine\022G\n\021streaming_service"
      "\030\r \001(\0132,.eve_public.app.platform.OS.Stre"
      "amingService\032\222\001\n\014GraphicsAPIs\022\027\n\017metal_s"
      "upported\030\001 \001(\010\022\030\n\020vulkan_supported\030\002 \001(\010"
      "\022(\n vulkan_highest_supported_version\030\003 \001"
      "(\t\022%\n\035d3d_highest_supported_version\030\004 \001("
      "\t\032(\n\004Wine\022\017\n\007version\030\001 \001(\t\022\017\n\007host_os\030\002 "
      "\001(\t\032\253\001\n\020StreamingService\022G\n\010provider\030\001 \001"
      "(\01625.eve_public.app.platform.OS.Streamin"
      "gService.Provider\"N\n\010Provider\022\030\n\024PROVIDE"
      "R_UNSPECIFIED\020\000\022\024\n\020PROVIDER_UNKNOWN\020\001\022\022\n"
      "\016PROVIDER_INTEL\020\002\"M\n\004Kind\022\024\n\020KIND_UNSPEC"
      "IFIED\020\000\022\020\n\014KIND_WINDOWS\020\001\022\016\n\nKIND_MACOS\020"
      "\002\022\r\n\tKIND_WINE\020\003\"\260\016\n\007Machine\022\r\n\005model\030\001 "
      "\001(\t\022\014\n\004name\030\002 \001(\t\022\014\n\004uuid\030\003 \001(\014\022\024\n\014total"
      "_memory\030\004 \001(\003\022\025\n\rmonitor_count\030\005 \001(\005\0221\n\003"
      "cpu\030\006 \001(\0132$.eve_public.app.platform.Mach"
      "ine.CPU\022/\n\002vm\030\007 \001(\0132#.eve_public.app.pla"
      "tform.Machine.VM\022:\n\010monitors\030\010 \003(\0132(.eve"
      "_public.app.platform.Machine.Monitor\0222\n\004"
      "gpus\030\t \003(\0132$.eve_public.app.platform.Mac"
      "hine.GPU\022I\n\020network_adapters\030\n \003(\0132/.eve"
      "_public.app.platform.Machine.NetworkAdap"
      "ter\022L\n\021battery_detection\030\013 \001(\01621.eve_pub"
      "lic.app.platform.Machine.BatteryDetectio"
      "n\022\?\n\013hard_drives\030\014 \003(\0132*.eve_public.app."
      "platform.Machine.HardDrive\032\220\003\n\003CPU\0221\n\007bi"
      "tness\030\001 \001(\0162 .eve_public.app.platform.Bi"
      "tness\022\032\n\022logical_core_count\030\002 \001(\005\022\r\n\005bra"
      "nd\030\003 \001(\t\022\016\n\006vendor\030\004 \001(\t\022\r\n\005model\030\005 \001(\005\022"
      "\020\n\010stepping\030\006 \001(\005\022G\n\014architecture\030\007 \001(\0162"
      "1.eve_public.app.platform.Machine.CPU.Ar"
      "chitecture\022\022\n\nextensions\030\010 \003(\t\022\021\n\tfreque"
      "ncy\030\t \001(\r\"\211\001\n\014Architecture\022\034\n\030ARCHITECTU"
      "RE_UNSPECIFIED\020\000\022\024\n\020ARCHITECTURE_X86\020\001\022\027"
      "\n\023ARCHITECTURE_X86_64\020\002\022\024\n\020ARCHITECTURE_"
      "ARM\020\003\022\026\n\022ARCHITECTURE_ARM64\020\004\032\223\001\n\002VM\022\027\n\017"
      "is_suspected_vm\030\001 \001(\010\022\032\n\022has_hypervisor_"
      "bit\030\002 \001(\010\022\027\n\017hypervisor_name\030\003 \001(\t\022\036\n\026is"
      "_hypervisor_guest_os\030\004 \001(\010\022\037\n\027has_vm_exe"
      "cution_timing\030\005 \001(\010\032\236\001\n\007Monitor\022\014\n\004name\030"
      "\001 \001(\t\022\035\n\025horizontal_resolution\030\002 \001(\005\022\033\n\023"
      "vertical_resolution\030\003 \001(\005\022\026\n\016bits_per_co"
      "lor\030\004 \001(\005\022\024\n\014refresh_rate\030\005 \001(\005\022\033\n\023dpi_s"
      "caling_percent\030\006 \001(\005\032\362\001\n\003GPU\022\023\n\013descript"
      "ion\030\001 \001(\t\022\021\n\tvendor_id\030\002 \001(\005\022\021\n\tdevice_i"
      "d\030\003 \001(\005\022\020\n\010revision\030\004 \001(\005\022\024\n\014video_memor"
      "y\030\005 \001(\003\022;\n\006driver\030\006 \001(\0132+.eve_public.app"
      ".platform.Machine.GPU.Driver\022\022\n\ncore_cou"
      "nt\030\007 \001(\r\0327\n\006Driver\022\014\n\004date\030\001 \001(\t\022\016\n\006vend"
      "or\030\002 \001(\t\022\017\n\007version\030\003 \001(\t\032A\n\016NetworkAdap"
      "ter\022\014\n\004name\030\001 \001(\t\022\023\n\013mac_address\030\002 \001(\014\022\014"
      "\n\004uuid\030\003 \001(\014\032\277\001\n\tHardDrive\022\014\n\004name\030\001 \001(\t"
      "\022H\n\ndrive_type\030\002 \001(\01624.eve_public.app.pl"
      "atform.Machine.HardDrive.DriveType\022\014\n\004si"
      "ze\030\003 \001(\004\"L\n\tDriveType\022\031\n\025DRIVETYPE_UNSPE"
      "CIFIED\020\000\022\021\n\rDRIVETYPE_SSD\020\001\022\021\n\rDRIVETYPE"
      "_HDD\020\002\"[\n\020BatteryDetection\022\027\n\023BATTERY_UN"
      "SPECIFIED\020\000\022\024\n\020BATTERY_DETECTED\020\001\022\030\n\024BAT"
      "TERY_NOT_DETECTED\020\002\"[\n\007Process\022\035\n\025runnin"
      "g_under_rosetta\030\001 \001(\010\0221\n\007bitness\030\002 \001(\0162 "
      ".eve_public.app.platform.Bitness\"\305\002\n\013Inf"
      "ormation\0229\n\007version\030\001 \001(\0132(.eve_public.a"
      "pp.platform.SemanticVersion\022-\n\ttimestamp"
      "\030\002 \001(\0132\032.google.protobuf.Timestamp\022=\n\017pr"
      "ocess_bitness\030\003 \001(\0162 .eve_public.app.pla"
      "tform.BitnessB\002\030\001\022\'\n\002os\030\004 \001(\0132\033.eve_publ"
      "ic.app.platform.OS\0221\n\007machine\030\005 \001(\0132 .ev"
      "e_public.app.platform.Machine\0221\n\007process"
      "\030\006 \001(\0132 .eve_public.app.platform.Process"
      "*B\n\007Bitness\022\027\n\023BITNESS_UNSPECIFIED\020\000\022\016\n\n"
      "BITNESS_32\020\001\022\016\n\nBITNESS_64\020\002BLZJgithub.c"
      "om/ccpgames/eve-proto-go/generated/eve_p"
      "ublic/application/platformb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3514);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "eve_public/app/platform.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_eve_5fpublic_2fapp_2fplatform_2eproto
namespace eve_public {
namespace app {
namespace platform {
const ::google::protobuf::EnumDescriptor* OS_StreamingService_Provider_descriptor() {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_enum_descriptors[0];
}
bool OS_StreamingService_Provider_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OS_StreamingService_Provider OS_StreamingService::PROVIDER_UNSPECIFIED;
const OS_StreamingService_Provider OS_StreamingService::PROVIDER_UNKNOWN;
const OS_StreamingService_Provider OS_StreamingService::PROVIDER_INTEL;
const OS_StreamingService_Provider OS_StreamingService::Provider_MIN;
const OS_StreamingService_Provider OS_StreamingService::Provider_MAX;
const int OS_StreamingService::Provider_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* OS_Kind_descriptor() {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_enum_descriptors[1];
}
bool OS_Kind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const OS_Kind OS::KIND_UNSPECIFIED;
const OS_Kind OS::KIND_WINDOWS;
const OS_Kind OS::KIND_MACOS;
const OS_Kind OS::KIND_WINE;
const OS_Kind OS::Kind_MIN;
const OS_Kind OS::Kind_MAX;
const int OS::Kind_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Machine_CPU_Architecture_descriptor() {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_enum_descriptors[2];
}
bool Machine_CPU_Architecture_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Machine_CPU_Architecture Machine_CPU::ARCHITECTURE_UNSPECIFIED;
const Machine_CPU_Architecture Machine_CPU::ARCHITECTURE_X86;
const Machine_CPU_Architecture Machine_CPU::ARCHITECTURE_X86_64;
const Machine_CPU_Architecture Machine_CPU::ARCHITECTURE_ARM;
const Machine_CPU_Architecture Machine_CPU::ARCHITECTURE_ARM64;
const Machine_CPU_Architecture Machine_CPU::Architecture_MIN;
const Machine_CPU_Architecture Machine_CPU::Architecture_MAX;
const int Machine_CPU::Architecture_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Machine_HardDrive_DriveType_descriptor() {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_enum_descriptors[3];
}
bool Machine_HardDrive_DriveType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Machine_HardDrive_DriveType Machine_HardDrive::DRIVETYPE_UNSPECIFIED;
const Machine_HardDrive_DriveType Machine_HardDrive::DRIVETYPE_SSD;
const Machine_HardDrive_DriveType Machine_HardDrive::DRIVETYPE_HDD;
const Machine_HardDrive_DriveType Machine_HardDrive::DriveType_MIN;
const Machine_HardDrive_DriveType Machine_HardDrive::DriveType_MAX;
const int Machine_HardDrive::DriveType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Machine_BatteryDetection_descriptor() {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_enum_descriptors[4];
}
bool Machine_BatteryDetection_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Machine_BatteryDetection Machine::BATTERY_UNSPECIFIED;
const Machine_BatteryDetection Machine::BATTERY_DETECTED;
const Machine_BatteryDetection Machine::BATTERY_NOT_DETECTED;
const Machine_BatteryDetection Machine::BatteryDetection_MIN;
const Machine_BatteryDetection Machine::BatteryDetection_MAX;
const int Machine::BatteryDetection_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Bitness_descriptor() {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_enum_descriptors[5];
}
bool Bitness_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SemanticVersion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SemanticVersion::kMajorFieldNumber;
const int SemanticVersion::kMinorFieldNumber;
const int SemanticVersion::kPatchFieldNumber;
const int SemanticVersion::kPrereleaseFieldNumber;
const int SemanticVersion::kBuildFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SemanticVersion::SemanticVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_SemanticVersion.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.SemanticVersion)
}
SemanticVersion::SemanticVersion(const SemanticVersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prerelease_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prerelease().size() > 0) {
    prerelease_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prerelease_);
  }
  build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build().size() > 0) {
    build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_);
  }
  ::memcpy(&major_, &from.major_,
    static_cast<size_t>(reinterpret_cast<char*>(&patch_) -
    reinterpret_cast<char*>(&major_)) + sizeof(patch_));
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.SemanticVersion)
}

void SemanticVersion::SharedCtor() {
  prerelease_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&patch_) -
      reinterpret_cast<char*>(&major_)) + sizeof(patch_));
}

SemanticVersion::~SemanticVersion() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.SemanticVersion)
  SharedDtor();
}

void SemanticVersion::SharedDtor() {
  prerelease_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SemanticVersion::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SemanticVersion::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SemanticVersion& SemanticVersion::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_SemanticVersion.base);
  return *internal_default_instance();
}


void SemanticVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.SemanticVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prerelease_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&major_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&patch_) -
      reinterpret_cast<char*>(&major_)) + sizeof(patch_));
  _internal_metadata_.Clear();
}

bool SemanticVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.SemanticVersion)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 major = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &major_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 minor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &minor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 patch = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &patch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prerelease = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prerelease()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prerelease().data(), static_cast<int>(this->prerelease().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.SemanticVersion.prerelease"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string build = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build().data(), static_cast<int>(this->build().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.SemanticVersion.build"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.SemanticVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.SemanticVersion)
  return false;
#undef DO_
}

void SemanticVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.SemanticVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 major = 1;
  if (this->major() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->major(), output);
  }

  // uint32 minor = 2;
  if (this->minor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->minor(), output);
  }

  // uint32 patch = 3;
  if (this->patch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->patch(), output);
  }

  // string prerelease = 4;
  if (this->prerelease().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prerelease().data(), static_cast<int>(this->prerelease().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.SemanticVersion.prerelease");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->prerelease(), output);
  }

  // string build = 5;
  if (this->build().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build().data(), static_cast<int>(this->build().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.SemanticVersion.build");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->build(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.SemanticVersion)
}

::google::protobuf::uint8* SemanticVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.SemanticVersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 major = 1;
  if (this->major() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->major(), target);
  }

  // uint32 minor = 2;
  if (this->minor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->minor(), target);
  }

  // uint32 patch = 3;
  if (this->patch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->patch(), target);
  }

  // string prerelease = 4;
  if (this->prerelease().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prerelease().data(), static_cast<int>(this->prerelease().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.SemanticVersion.prerelease");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->prerelease(), target);
  }

  // string build = 5;
  if (this->build().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build().data(), static_cast<int>(this->build().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.SemanticVersion.build");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->build(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.SemanticVersion)
  return target;
}

size_t SemanticVersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.SemanticVersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string prerelease = 4;
  if (this->prerelease().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prerelease());
  }

  // string build = 5;
  if (this->build().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build());
  }

  // uint32 major = 1;
  if (this->major() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->major());
  }

  // uint32 minor = 2;
  if (this->minor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->minor());
  }

  // uint32 patch = 3;
  if (this->patch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->patch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SemanticVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.SemanticVersion)
  GOOGLE_DCHECK_NE(&from, this);
  const SemanticVersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SemanticVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.SemanticVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.SemanticVersion)
    MergeFrom(*source);
  }
}

void SemanticVersion::MergeFrom(const SemanticVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.SemanticVersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.prerelease().size() > 0) {

    prerelease_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prerelease_);
  }
  if (from.build().size() > 0) {

    build_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_);
  }
  if (from.major() != 0) {
    set_major(from.major());
  }
  if (from.minor() != 0) {
    set_minor(from.minor());
  }
  if (from.patch() != 0) {
    set_patch(from.patch());
  }
}

void SemanticVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.SemanticVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SemanticVersion::CopyFrom(const SemanticVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.SemanticVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SemanticVersion::IsInitialized() const {
  return true;
}

void SemanticVersion::Swap(SemanticVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SemanticVersion::InternalSwap(SemanticVersion* other) {
  using std::swap;
  prerelease_.Swap(&other->prerelease_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  build_.Swap(&other->build_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(major_, other->major_);
  swap(minor_, other->minor_);
  swap(patch_, other->patch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SemanticVersion::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OS_GraphicsAPIs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OS_GraphicsAPIs::kMetalSupportedFieldNumber;
const int OS_GraphicsAPIs::kVulkanSupportedFieldNumber;
const int OS_GraphicsAPIs::kVulkanHighestSupportedVersionFieldNumber;
const int OS_GraphicsAPIs::kD3DHighestSupportedVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OS_GraphicsAPIs::OS_GraphicsAPIs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS_GraphicsAPIs.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.OS.GraphicsAPIs)
}
OS_GraphicsAPIs::OS_GraphicsAPIs(const OS_GraphicsAPIs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vulkan_highest_supported_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vulkan_highest_supported_version().size() > 0) {
    vulkan_highest_supported_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vulkan_highest_supported_version_);
  }
  d3d_highest_supported_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.d3d_highest_supported_version().size() > 0) {
    d3d_highest_supported_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.d3d_highest_supported_version_);
  }
  ::memcpy(&metal_supported_, &from.metal_supported_,
    static_cast<size_t>(reinterpret_cast<char*>(&vulkan_supported_) -
    reinterpret_cast<char*>(&metal_supported_)) + sizeof(vulkan_supported_));
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.OS.GraphicsAPIs)
}

void OS_GraphicsAPIs::SharedCtor() {
  vulkan_highest_supported_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  d3d_highest_supported_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metal_supported_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vulkan_supported_) -
      reinterpret_cast<char*>(&metal_supported_)) + sizeof(vulkan_supported_));
}

OS_GraphicsAPIs::~OS_GraphicsAPIs() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.OS.GraphicsAPIs)
  SharedDtor();
}

void OS_GraphicsAPIs::SharedDtor() {
  vulkan_highest_supported_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  d3d_highest_supported_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OS_GraphicsAPIs::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OS_GraphicsAPIs::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OS_GraphicsAPIs& OS_GraphicsAPIs::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS_GraphicsAPIs.base);
  return *internal_default_instance();
}


void OS_GraphicsAPIs::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.OS.GraphicsAPIs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vulkan_highest_supported_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  d3d_highest_supported_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&metal_supported_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vulkan_supported_) -
      reinterpret_cast<char*>(&metal_supported_)) + sizeof(vulkan_supported_));
  _internal_metadata_.Clear();
}

bool OS_GraphicsAPIs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.OS.GraphicsAPIs)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool metal_supported = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &metal_supported_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool vulkan_supported = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vulkan_supported_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vulkan_highest_supported_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vulkan_highest_supported_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vulkan_highest_supported_version().data(), static_cast<int>(this->vulkan_highest_supported_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.OS.GraphicsAPIs.vulkan_highest_supported_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string d3d_highest_supported_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_d3d_highest_supported_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->d3d_highest_supported_version().data(), static_cast<int>(this->d3d_highest_supported_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.OS.GraphicsAPIs.d3d_highest_supported_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.OS.GraphicsAPIs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.OS.GraphicsAPIs)
  return false;
#undef DO_
}

void OS_GraphicsAPIs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.OS.GraphicsAPIs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool metal_supported = 1;
  if (this->metal_supported() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->metal_supported(), output);
  }

  // bool vulkan_supported = 2;
  if (this->vulkan_supported() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->vulkan_supported(), output);
  }

  // string vulkan_highest_supported_version = 3;
  if (this->vulkan_highest_supported_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vulkan_highest_supported_version().data(), static_cast<int>(this->vulkan_highest_supported_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.GraphicsAPIs.vulkan_highest_supported_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vulkan_highest_supported_version(), output);
  }

  // string d3d_highest_supported_version = 4;
  if (this->d3d_highest_supported_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->d3d_highest_supported_version().data(), static_cast<int>(this->d3d_highest_supported_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.GraphicsAPIs.d3d_highest_supported_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->d3d_highest_supported_version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.OS.GraphicsAPIs)
}

::google::protobuf::uint8* OS_GraphicsAPIs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.OS.GraphicsAPIs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool metal_supported = 1;
  if (this->metal_supported() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->metal_supported(), target);
  }

  // bool vulkan_supported = 2;
  if (this->vulkan_supported() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->vulkan_supported(), target);
  }

  // string vulkan_highest_supported_version = 3;
  if (this->vulkan_highest_supported_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vulkan_highest_supported_version().data(), static_cast<int>(this->vulkan_highest_supported_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.GraphicsAPIs.vulkan_highest_supported_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vulkan_highest_supported_version(), target);
  }

  // string d3d_highest_supported_version = 4;
  if (this->d3d_highest_supported_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->d3d_highest_supported_version().data(), static_cast<int>(this->d3d_highest_supported_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.GraphicsAPIs.d3d_highest_supported_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->d3d_highest_supported_version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.OS.GraphicsAPIs)
  return target;
}

size_t OS_GraphicsAPIs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.OS.GraphicsAPIs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string vulkan_highest_supported_version = 3;
  if (this->vulkan_highest_supported_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vulkan_highest_supported_version());
  }

  // string d3d_highest_supported_version = 4;
  if (this->d3d_highest_supported_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->d3d_highest_supported_version());
  }

  // bool metal_supported = 1;
  if (this->metal_supported() != 0) {
    total_size += 1 + 1;
  }

  // bool vulkan_supported = 2;
  if (this->vulkan_supported() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OS_GraphicsAPIs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.OS.GraphicsAPIs)
  GOOGLE_DCHECK_NE(&from, this);
  const OS_GraphicsAPIs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OS_GraphicsAPIs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.OS.GraphicsAPIs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.OS.GraphicsAPIs)
    MergeFrom(*source);
  }
}

void OS_GraphicsAPIs::MergeFrom(const OS_GraphicsAPIs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.OS.GraphicsAPIs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vulkan_highest_supported_version().size() > 0) {

    vulkan_highest_supported_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vulkan_highest_supported_version_);
  }
  if (from.d3d_highest_supported_version().size() > 0) {

    d3d_highest_supported_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.d3d_highest_supported_version_);
  }
  if (from.metal_supported() != 0) {
    set_metal_supported(from.metal_supported());
  }
  if (from.vulkan_supported() != 0) {
    set_vulkan_supported(from.vulkan_supported());
  }
}

void OS_GraphicsAPIs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.OS.GraphicsAPIs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OS_GraphicsAPIs::CopyFrom(const OS_GraphicsAPIs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.OS.GraphicsAPIs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OS_GraphicsAPIs::IsInitialized() const {
  return true;
}

void OS_GraphicsAPIs::Swap(OS_GraphicsAPIs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OS_GraphicsAPIs::InternalSwap(OS_GraphicsAPIs* other) {
  using std::swap;
  vulkan_highest_supported_version_.Swap(&other->vulkan_highest_supported_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  d3d_highest_supported_version_.Swap(&other->d3d_highest_supported_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(metal_supported_, other->metal_supported_);
  swap(vulkan_supported_, other->vulkan_supported_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OS_GraphicsAPIs::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OS_Wine::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OS_Wine::kVersionFieldNumber;
const int OS_Wine::kHostOsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OS_Wine::OS_Wine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS_Wine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.OS.Wine)
}
OS_Wine::OS_Wine(const OS_Wine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  host_os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.host_os().size() > 0) {
    host_os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_os_);
  }
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.OS.Wine)
}

void OS_Wine::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OS_Wine::~OS_Wine() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.OS.Wine)
  SharedDtor();
}

void OS_Wine::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_os_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OS_Wine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OS_Wine::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OS_Wine& OS_Wine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS_Wine.base);
  return *internal_default_instance();
}


void OS_Wine::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.OS.Wine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OS_Wine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.OS.Wine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.OS.Wine.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string host_os = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_os()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_os().data(), static_cast<int>(this->host_os().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.OS.Wine.host_os"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.OS.Wine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.OS.Wine)
  return false;
#undef DO_
}

void OS_Wine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.OS.Wine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.Wine.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  // string host_os = 2;
  if (this->host_os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_os().data(), static_cast<int>(this->host_os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.Wine.host_os");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_os(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.OS.Wine)
}

::google::protobuf::uint8* OS_Wine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.OS.Wine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.Wine.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  // string host_os = 2;
  if (this->host_os().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_os().data(), static_cast<int>(this->host_os().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.Wine.host_os");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_os(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.OS.Wine)
  return target;
}

size_t OS_Wine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.OS.Wine)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  // string host_os = 2;
  if (this->host_os().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_os());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OS_Wine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.OS.Wine)
  GOOGLE_DCHECK_NE(&from, this);
  const OS_Wine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OS_Wine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.OS.Wine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.OS.Wine)
    MergeFrom(*source);
  }
}

void OS_Wine::MergeFrom(const OS_Wine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.OS.Wine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.host_os().size() > 0) {

    host_os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_os_);
  }
}

void OS_Wine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.OS.Wine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OS_Wine::CopyFrom(const OS_Wine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.OS.Wine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OS_Wine::IsInitialized() const {
  return true;
}

void OS_Wine::Swap(OS_Wine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OS_Wine::InternalSwap(OS_Wine* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  host_os_.Swap(&other->host_os_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OS_Wine::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OS_StreamingService::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OS_StreamingService::kProviderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OS_StreamingService::OS_StreamingService()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS_StreamingService.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.OS.StreamingService)
}
OS_StreamingService::OS_StreamingService(const OS_StreamingService& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  provider_ = from.provider_;
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.OS.StreamingService)
}

void OS_StreamingService::SharedCtor() {
  provider_ = 0;
}

OS_StreamingService::~OS_StreamingService() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.OS.StreamingService)
  SharedDtor();
}

void OS_StreamingService::SharedDtor() {
}

void OS_StreamingService::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OS_StreamingService::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OS_StreamingService& OS_StreamingService::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS_StreamingService.base);
  return *internal_default_instance();
}


void OS_StreamingService::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.OS.StreamingService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  provider_ = 0;
  _internal_metadata_.Clear();
}

bool OS_StreamingService::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.OS.StreamingService)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eve_public.app.platform.OS.StreamingService.Provider provider = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_provider(static_cast< ::eve_public::app::platform::OS_StreamingService_Provider >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.OS.StreamingService)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.OS.StreamingService)
  return false;
#undef DO_
}

void OS_StreamingService::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.OS.StreamingService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_public.app.platform.OS.StreamingService.Provider provider = 1;
  if (this->provider() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->provider(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.OS.StreamingService)
}

::google::protobuf::uint8* OS_StreamingService::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.OS.StreamingService)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_public.app.platform.OS.StreamingService.Provider provider = 1;
  if (this->provider() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->provider(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.OS.StreamingService)
  return target;
}

size_t OS_StreamingService::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.OS.StreamingService)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .eve_public.app.platform.OS.StreamingService.Provider provider = 1;
  if (this->provider() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->provider());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OS_StreamingService::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.OS.StreamingService)
  GOOGLE_DCHECK_NE(&from, this);
  const OS_StreamingService* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OS_StreamingService>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.OS.StreamingService)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.OS.StreamingService)
    MergeFrom(*source);
  }
}

void OS_StreamingService::MergeFrom(const OS_StreamingService& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.OS.StreamingService)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.provider() != 0) {
    set_provider(from.provider());
  }
}

void OS_StreamingService::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.OS.StreamingService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OS_StreamingService::CopyFrom(const OS_StreamingService& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.OS.StreamingService)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OS_StreamingService::IsInitialized() const {
  return true;
}

void OS_StreamingService::Swap(OS_StreamingService* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OS_StreamingService::InternalSwap(OS_StreamingService* other) {
  using std::swap;
  swap(provider_, other->provider_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OS_StreamingService::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OS::InitAsDefaultInstance() {
  ::eve_public::app::platform::_OS_default_instance_._instance.get_mutable()->graphics_apis_ = const_cast< ::eve_public::app::platform::OS_GraphicsAPIs*>(
      ::eve_public::app::platform::OS_GraphicsAPIs::internal_default_instance());
  ::eve_public::app::platform::_OS_default_instance_._instance.get_mutable()->wine_ = const_cast< ::eve_public::app::platform::OS_Wine*>(
      ::eve_public::app::platform::OS_Wine::internal_default_instance());
  ::eve_public::app::platform::_OS_default_instance_._instance.get_mutable()->streaming_service_ = const_cast< ::eve_public::app::platform::OS_StreamingService*>(
      ::eve_public::app::platform::OS_StreamingService::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OS::kTypeFieldNumber;
const int OS::kNameFieldNumber;
const int OS::kBitnessFieldNumber;
const int OS::kMajorVersionFieldNumber;
const int OS::kMinorVersionFieldNumber;
const int OS::kBuildNumberFieldNumber;
const int OS::kKernelVersionFieldNumber;
const int OS::kUsernameFieldNumber;
const int OS::kUserLocaleFieldNumber;
const int OS::kIsRemoteSessionFieldNumber;
const int OS::kGraphicsApisFieldNumber;
const int OS::kWineFieldNumber;
const int OS::kStreamingServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OS::OS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.OS)
}
OS::OS(const OS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  major_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.major_version().size() > 0) {
    major_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.major_version_);
  }
  minor_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.minor_version().size() > 0) {
    minor_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.minor_version_);
  }
  build_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.build_number().size() > 0) {
    build_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_number_);
  }
  kernel_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kernel_version().size() > 0) {
    kernel_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kernel_version_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  user_locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_locale().size() > 0) {
    user_locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_locale_);
  }
  if (from.has_graphics_apis()) {
    graphics_apis_ = new ::eve_public::app::platform::OS_GraphicsAPIs(*from.graphics_apis_);
  } else {
    graphics_apis_ = NULL;
  }
  if (from.has_wine()) {
    wine_ = new ::eve_public::app::platform::OS_Wine(*from.wine_);
  } else {
    wine_ = NULL;
  }
  if (from.has_streaming_service()) {
    streaming_service_ = new ::eve_public::app::platform::OS_StreamingService(*from.streaming_service_);
  } else {
    streaming_service_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_remote_session_) -
    reinterpret_cast<char*>(&type_)) + sizeof(is_remote_session_));
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.OS)
}

void OS::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  major_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  minor_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&graphics_apis_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_remote_session_) -
      reinterpret_cast<char*>(&graphics_apis_)) + sizeof(is_remote_session_));
}

OS::~OS() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.OS)
  SharedDtor();
}

void OS::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  major_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  minor_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_locale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete graphics_apis_;
  if (this != internal_default_instance()) delete wine_;
  if (this != internal_default_instance()) delete streaming_service_;
}

void OS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OS::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OS& OS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_OS.base);
  return *internal_default_instance();
}


void OS::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.OS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  major_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  minor_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  build_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kernel_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && graphics_apis_ != NULL) {
    delete graphics_apis_;
  }
  graphics_apis_ = NULL;
  if (GetArenaNoVirtual() == NULL && wine_ != NULL) {
    delete wine_;
  }
  wine_ = NULL;
  if (GetArenaNoVirtual() == NULL && streaming_service_ != NULL) {
    delete streaming_service_;
  }
  streaming_service_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_remote_session_) -
      reinterpret_cast<char*>(&type_)) + sizeof(is_remote_session_));
  _internal_metadata_.Clear();
}

bool OS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.OS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eve_public.app.platform.OS.Kind type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::eve_public::app::platform::OS_Kind >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.OS.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.Bitness bitness = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bitness(static_cast< ::eve_public::app::platform::Bitness >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string major_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_major_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->major_version().data(), static_cast<int>(this->major_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.OS.major_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string minor_version = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_minor_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->minor_version().data(), static_cast<int>(this->minor_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.OS.minor_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string build_number = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_build_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->build_number().data(), static_cast<int>(this->build_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.OS.build_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string kernel_version = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kernel_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kernel_version().data(), static_cast<int>(this->kernel_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.OS.kernel_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.OS.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_locale = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_locale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_locale().data(), static_cast<int>(this->user_locale().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.OS.user_locale"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_remote_session = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_remote_session_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.OS.GraphicsAPIs graphics_apis = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_graphics_apis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.OS.Wine wine = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.OS.StreamingService streaming_service = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_streaming_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.OS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.OS)
  return false;
#undef DO_
}

void OS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.OS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_public.app.platform.OS.Kind type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // .eve_public.app.platform.Bitness bitness = 3;
  if (this->bitness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->bitness(), output);
  }

  // string major_version = 4;
  if (this->major_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->major_version().data(), static_cast<int>(this->major_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.major_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->major_version(), output);
  }

  // string minor_version = 5;
  if (this->minor_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->minor_version().data(), static_cast<int>(this->minor_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.minor_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->minor_version(), output);
  }

  // string build_number = 6;
  if (this->build_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_number().data(), static_cast<int>(this->build_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.build_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->build_number(), output);
  }

  // string kernel_version = 7;
  if (this->kernel_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kernel_version().data(), static_cast<int>(this->kernel_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.kernel_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->kernel_version(), output);
  }

  // string username = 8;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->username(), output);
  }

  // string user_locale = 9;
  if (this->user_locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_locale().data(), static_cast<int>(this->user_locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.user_locale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->user_locale(), output);
  }

  // bool is_remote_session = 10;
  if (this->is_remote_session() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->is_remote_session(), output);
  }

  // .eve_public.app.platform.OS.GraphicsAPIs graphics_apis = 11;
  if (this->has_graphics_apis()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_graphics_apis(), output);
  }

  // .eve_public.app.platform.OS.Wine wine = 12;
  if (this->has_wine()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_wine(), output);
  }

  // .eve_public.app.platform.OS.StreamingService streaming_service = 13;
  if (this->has_streaming_service()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_streaming_service(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.OS)
}

::google::protobuf::uint8* OS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.OS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_public.app.platform.OS.Kind type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // .eve_public.app.platform.Bitness bitness = 3;
  if (this->bitness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->bitness(), target);
  }

  // string major_version = 4;
  if (this->major_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->major_version().data(), static_cast<int>(this->major_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.major_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->major_version(), target);
  }

  // string minor_version = 5;
  if (this->minor_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->minor_version().data(), static_cast<int>(this->minor_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.minor_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->minor_version(), target);
  }

  // string build_number = 6;
  if (this->build_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->build_number().data(), static_cast<int>(this->build_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.build_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->build_number(), target);
  }

  // string kernel_version = 7;
  if (this->kernel_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kernel_version().data(), static_cast<int>(this->kernel_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.kernel_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->kernel_version(), target);
  }

  // string username = 8;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->username(), target);
  }

  // string user_locale = 9;
  if (this->user_locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_locale().data(), static_cast<int>(this->user_locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.OS.user_locale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->user_locale(), target);
  }

  // bool is_remote_session = 10;
  if (this->is_remote_session() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->is_remote_session(), target);
  }

  // .eve_public.app.platform.OS.GraphicsAPIs graphics_apis = 11;
  if (this->has_graphics_apis()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_graphics_apis(), deterministic, target);
  }

  // .eve_public.app.platform.OS.Wine wine = 12;
  if (this->has_wine()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_wine(), deterministic, target);
  }

  // .eve_public.app.platform.OS.StreamingService streaming_service = 13;
  if (this->has_streaming_service()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_streaming_service(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.OS)
  return target;
}

size_t OS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.OS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string major_version = 4;
  if (this->major_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->major_version());
  }

  // string minor_version = 5;
  if (this->minor_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->minor_version());
  }

  // string build_number = 6;
  if (this->build_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->build_number());
  }

  // string kernel_version = 7;
  if (this->kernel_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kernel_version());
  }

  // string username = 8;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string user_locale = 9;
  if (this->user_locale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_locale());
  }

  // .eve_public.app.platform.OS.GraphicsAPIs graphics_apis = 11;
  if (this->has_graphics_apis()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *graphics_apis_);
  }

  // .eve_public.app.platform.OS.Wine wine = 12;
  if (this->has_wine()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *wine_);
  }

  // .eve_public.app.platform.OS.StreamingService streaming_service = 13;
  if (this->has_streaming_service()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *streaming_service_);
  }

  // .eve_public.app.platform.OS.Kind type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .eve_public.app.platform.Bitness bitness = 3;
  if (this->bitness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bitness());
  }

  // bool is_remote_session = 10;
  if (this->is_remote_session() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.OS)
  GOOGLE_DCHECK_NE(&from, this);
  const OS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.OS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.OS)
    MergeFrom(*source);
  }
}

void OS::MergeFrom(const OS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.OS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.major_version().size() > 0) {

    major_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.major_version_);
  }
  if (from.minor_version().size() > 0) {

    minor_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.minor_version_);
  }
  if (from.build_number().size() > 0) {

    build_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.build_number_);
  }
  if (from.kernel_version().size() > 0) {

    kernel_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kernel_version_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.user_locale().size() > 0) {

    user_locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_locale_);
  }
  if (from.has_graphics_apis()) {
    mutable_graphics_apis()->::eve_public::app::platform::OS_GraphicsAPIs::MergeFrom(from.graphics_apis());
  }
  if (from.has_wine()) {
    mutable_wine()->::eve_public::app::platform::OS_Wine::MergeFrom(from.wine());
  }
  if (from.has_streaming_service()) {
    mutable_streaming_service()->::eve_public::app::platform::OS_StreamingService::MergeFrom(from.streaming_service());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.bitness() != 0) {
    set_bitness(from.bitness());
  }
  if (from.is_remote_session() != 0) {
    set_is_remote_session(from.is_remote_session());
  }
}

void OS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.OS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OS::CopyFrom(const OS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.OS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OS::IsInitialized() const {
  return true;
}

void OS::Swap(OS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OS::InternalSwap(OS* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  major_version_.Swap(&other->major_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  minor_version_.Swap(&other->minor_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  build_number_.Swap(&other->build_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kernel_version_.Swap(&other->kernel_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_locale_.Swap(&other->user_locale_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(graphics_apis_, other->graphics_apis_);
  swap(wine_, other->wine_);
  swap(streaming_service_, other->streaming_service_);
  swap(type_, other->type_);
  swap(bitness_, other->bitness_);
  swap(is_remote_session_, other->is_remote_session_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OS::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Machine_CPU::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Machine_CPU::kBitnessFieldNumber;
const int Machine_CPU::kLogicalCoreCountFieldNumber;
const int Machine_CPU::kBrandFieldNumber;
const int Machine_CPU::kVendorFieldNumber;
const int Machine_CPU::kModelFieldNumber;
const int Machine_CPU::kSteppingFieldNumber;
const int Machine_CPU::kArchitectureFieldNumber;
const int Machine_CPU::kExtensionsFieldNumber;
const int Machine_CPU::kFrequencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Machine_CPU::Machine_CPU()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_CPU.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.Machine.CPU)
}
Machine_CPU::Machine_CPU(const Machine_CPU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      extensions_(from.extensions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  brand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.brand().size() > 0) {
    brand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brand_);
  }
  vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vendor().size() > 0) {
    vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vendor_);
  }
  ::memcpy(&bitness_, &from.bitness_,
    static_cast<size_t>(reinterpret_cast<char*>(&frequency_) -
    reinterpret_cast<char*>(&bitness_)) + sizeof(frequency_));
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.Machine.CPU)
}

void Machine_CPU::SharedCtor() {
  brand_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bitness_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frequency_) -
      reinterpret_cast<char*>(&bitness_)) + sizeof(frequency_));
}

Machine_CPU::~Machine_CPU() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.Machine.CPU)
  SharedDtor();
}

void Machine_CPU::SharedDtor() {
  brand_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Machine_CPU::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Machine_CPU::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Machine_CPU& Machine_CPU::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_CPU.base);
  return *internal_default_instance();
}


void Machine_CPU::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.Machine.CPU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extensions_.Clear();
  brand_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&bitness_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frequency_) -
      reinterpret_cast<char*>(&bitness_)) + sizeof(frequency_));
  _internal_metadata_.Clear();
}

bool Machine_CPU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.Machine.CPU)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eve_public.app.platform.Bitness bitness = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bitness(static_cast< ::eve_public::app::platform::Bitness >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 logical_core_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &logical_core_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string brand = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_brand()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->brand().data(), static_cast<int>(this->brand().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.CPU.brand"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vendor = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vendor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vendor().data(), static_cast<int>(this->vendor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.CPU.vendor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 model = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &model_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stepping = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stepping_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.Machine.CPU.Architecture architecture = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_architecture(static_cast< ::eve_public::app::platform::Machine_CPU_Architecture >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string extensions = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_extensions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->extensions(this->extensions_size() - 1).data(),
            static_cast<int>(this->extensions(this->extensions_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.CPU.extensions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 frequency = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &frequency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.Machine.CPU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.Machine.CPU)
  return false;
#undef DO_
}

void Machine_CPU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.Machine.CPU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_public.app.platform.Bitness bitness = 1;
  if (this->bitness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->bitness(), output);
  }

  // int32 logical_core_count = 2;
  if (this->logical_core_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->logical_core_count(), output);
  }

  // string brand = 3;
  if (this->brand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brand().data(), static_cast<int>(this->brand().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.CPU.brand");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->brand(), output);
  }

  // string vendor = 4;
  if (this->vendor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor().data(), static_cast<int>(this->vendor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.CPU.vendor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->vendor(), output);
  }

  // int32 model = 5;
  if (this->model() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->model(), output);
  }

  // int32 stepping = 6;
  if (this->stepping() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->stepping(), output);
  }

  // .eve_public.app.platform.Machine.CPU.Architecture architecture = 7;
  if (this->architecture() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->architecture(), output);
  }

  // repeated string extensions = 8;
  for (int i = 0, n = this->extensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extensions(i).data(), static_cast<int>(this->extensions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.CPU.extensions");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->extensions(i), output);
  }

  // uint32 frequency = 9;
  if (this->frequency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->frequency(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.Machine.CPU)
}

::google::protobuf::uint8* Machine_CPU::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.Machine.CPU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_public.app.platform.Bitness bitness = 1;
  if (this->bitness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->bitness(), target);
  }

  // int32 logical_core_count = 2;
  if (this->logical_core_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->logical_core_count(), target);
  }

  // string brand = 3;
  if (this->brand().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->brand().data(), static_cast<int>(this->brand().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.CPU.brand");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->brand(), target);
  }

  // string vendor = 4;
  if (this->vendor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor().data(), static_cast<int>(this->vendor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.CPU.vendor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->vendor(), target);
  }

  // int32 model = 5;
  if (this->model() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->model(), target);
  }

  // int32 stepping = 6;
  if (this->stepping() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->stepping(), target);
  }

  // .eve_public.app.platform.Machine.CPU.Architecture architecture = 7;
  if (this->architecture() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->architecture(), target);
  }

  // repeated string extensions = 8;
  for (int i = 0, n = this->extensions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->extensions(i).data(), static_cast<int>(this->extensions(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.CPU.extensions");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->extensions(i), target);
  }

  // uint32 frequency = 9;
  if (this->frequency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->frequency(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.Machine.CPU)
  return target;
}

size_t Machine_CPU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.Machine.CPU)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string extensions = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->extensions_size());
  for (int i = 0, n = this->extensions_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->extensions(i));
  }

  // string brand = 3;
  if (this->brand().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->brand());
  }

  // string vendor = 4;
  if (this->vendor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vendor());
  }

  // .eve_public.app.platform.Bitness bitness = 1;
  if (this->bitness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bitness());
  }

  // int32 logical_core_count = 2;
  if (this->logical_core_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->logical_core_count());
  }

  // int32 model = 5;
  if (this->model() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->model());
  }

  // int32 stepping = 6;
  if (this->stepping() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stepping());
  }

  // .eve_public.app.platform.Machine.CPU.Architecture architecture = 7;
  if (this->architecture() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->architecture());
  }

  // uint32 frequency = 9;
  if (this->frequency() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->frequency());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Machine_CPU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.Machine.CPU)
  GOOGLE_DCHECK_NE(&from, this);
  const Machine_CPU* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Machine_CPU>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.Machine.CPU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.Machine.CPU)
    MergeFrom(*source);
  }
}

void Machine_CPU::MergeFrom(const Machine_CPU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.Machine.CPU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extensions_.MergeFrom(from.extensions_);
  if (from.brand().size() > 0) {

    brand_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.brand_);
  }
  if (from.vendor().size() > 0) {

    vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vendor_);
  }
  if (from.bitness() != 0) {
    set_bitness(from.bitness());
  }
  if (from.logical_core_count() != 0) {
    set_logical_core_count(from.logical_core_count());
  }
  if (from.model() != 0) {
    set_model(from.model());
  }
  if (from.stepping() != 0) {
    set_stepping(from.stepping());
  }
  if (from.architecture() != 0) {
    set_architecture(from.architecture());
  }
  if (from.frequency() != 0) {
    set_frequency(from.frequency());
  }
}

void Machine_CPU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.Machine.CPU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Machine_CPU::CopyFrom(const Machine_CPU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.Machine.CPU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Machine_CPU::IsInitialized() const {
  return true;
}

void Machine_CPU::Swap(Machine_CPU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Machine_CPU::InternalSwap(Machine_CPU* other) {
  using std::swap;
  extensions_.InternalSwap(CastToBase(&other->extensions_));
  brand_.Swap(&other->brand_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vendor_.Swap(&other->vendor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(bitness_, other->bitness_);
  swap(logical_core_count_, other->logical_core_count_);
  swap(model_, other->model_);
  swap(stepping_, other->stepping_);
  swap(architecture_, other->architecture_);
  swap(frequency_, other->frequency_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Machine_CPU::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Machine_VM::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Machine_VM::kIsSuspectedVmFieldNumber;
const int Machine_VM::kHasHypervisorBitFieldNumber;
const int Machine_VM::kHypervisorNameFieldNumber;
const int Machine_VM::kIsHypervisorGuestOsFieldNumber;
const int Machine_VM::kHasVmExecutionTimingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Machine_VM::Machine_VM()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_VM.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.Machine.VM)
}
Machine_VM::Machine_VM(const Machine_VM& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hypervisor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hypervisor_name().size() > 0) {
    hypervisor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hypervisor_name_);
  }
  ::memcpy(&is_suspected_vm_, &from.is_suspected_vm_,
    static_cast<size_t>(reinterpret_cast<char*>(&has_vm_execution_timing_) -
    reinterpret_cast<char*>(&is_suspected_vm_)) + sizeof(has_vm_execution_timing_));
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.Machine.VM)
}

void Machine_VM::SharedCtor() {
  hypervisor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_suspected_vm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&has_vm_execution_timing_) -
      reinterpret_cast<char*>(&is_suspected_vm_)) + sizeof(has_vm_execution_timing_));
}

Machine_VM::~Machine_VM() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.Machine.VM)
  SharedDtor();
}

void Machine_VM::SharedDtor() {
  hypervisor_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Machine_VM::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Machine_VM::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Machine_VM& Machine_VM::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_VM.base);
  return *internal_default_instance();
}


void Machine_VM::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.Machine.VM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hypervisor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&is_suspected_vm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&has_vm_execution_timing_) -
      reinterpret_cast<char*>(&is_suspected_vm_)) + sizeof(has_vm_execution_timing_));
  _internal_metadata_.Clear();
}

bool Machine_VM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.Machine.VM)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool is_suspected_vm = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_suspected_vm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool has_hypervisor_bit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_hypervisor_bit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hypervisor_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hypervisor_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hypervisor_name().data(), static_cast<int>(this->hypervisor_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.VM.hypervisor_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_hypervisor_guest_os = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_hypervisor_guest_os_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool has_vm_execution_timing = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_vm_execution_timing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.Machine.VM)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.Machine.VM)
  return false;
#undef DO_
}

void Machine_VM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.Machine.VM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_suspected_vm = 1;
  if (this->is_suspected_vm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_suspected_vm(), output);
  }

  // bool has_hypervisor_bit = 2;
  if (this->has_hypervisor_bit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->has_hypervisor_bit(), output);
  }

  // string hypervisor_name = 3;
  if (this->hypervisor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hypervisor_name().data(), static_cast<int>(this->hypervisor_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.VM.hypervisor_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->hypervisor_name(), output);
  }

  // bool is_hypervisor_guest_os = 4;
  if (this->is_hypervisor_guest_os() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_hypervisor_guest_os(), output);
  }

  // bool has_vm_execution_timing = 5;
  if (this->has_vm_execution_timing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->has_vm_execution_timing(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.Machine.VM)
}

::google::protobuf::uint8* Machine_VM::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.Machine.VM)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool is_suspected_vm = 1;
  if (this->is_suspected_vm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_suspected_vm(), target);
  }

  // bool has_hypervisor_bit = 2;
  if (this->has_hypervisor_bit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->has_hypervisor_bit(), target);
  }

  // string hypervisor_name = 3;
  if (this->hypervisor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hypervisor_name().data(), static_cast<int>(this->hypervisor_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.VM.hypervisor_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->hypervisor_name(), target);
  }

  // bool is_hypervisor_guest_os = 4;
  if (this->is_hypervisor_guest_os() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_hypervisor_guest_os(), target);
  }

  // bool has_vm_execution_timing = 5;
  if (this->has_vm_execution_timing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->has_vm_execution_timing(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.Machine.VM)
  return target;
}

size_t Machine_VM::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.Machine.VM)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string hypervisor_name = 3;
  if (this->hypervisor_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hypervisor_name());
  }

  // bool is_suspected_vm = 1;
  if (this->is_suspected_vm() != 0) {
    total_size += 1 + 1;
  }

  // bool has_hypervisor_bit = 2;
  if (this->has_hypervisor_bit() != 0) {
    total_size += 1 + 1;
  }

  // bool is_hypervisor_guest_os = 4;
  if (this->is_hypervisor_guest_os() != 0) {
    total_size += 1 + 1;
  }

  // bool has_vm_execution_timing = 5;
  if (this->has_vm_execution_timing() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Machine_VM::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.Machine.VM)
  GOOGLE_DCHECK_NE(&from, this);
  const Machine_VM* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Machine_VM>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.Machine.VM)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.Machine.VM)
    MergeFrom(*source);
  }
}

void Machine_VM::MergeFrom(const Machine_VM& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.Machine.VM)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hypervisor_name().size() > 0) {

    hypervisor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hypervisor_name_);
  }
  if (from.is_suspected_vm() != 0) {
    set_is_suspected_vm(from.is_suspected_vm());
  }
  if (from.has_hypervisor_bit() != 0) {
    set_has_hypervisor_bit(from.has_hypervisor_bit());
  }
  if (from.is_hypervisor_guest_os() != 0) {
    set_is_hypervisor_guest_os(from.is_hypervisor_guest_os());
  }
  if (from.has_vm_execution_timing() != 0) {
    set_has_vm_execution_timing(from.has_vm_execution_timing());
  }
}

void Machine_VM::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.Machine.VM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Machine_VM::CopyFrom(const Machine_VM& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.Machine.VM)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Machine_VM::IsInitialized() const {
  return true;
}

void Machine_VM::Swap(Machine_VM* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Machine_VM::InternalSwap(Machine_VM* other) {
  using std::swap;
  hypervisor_name_.Swap(&other->hypervisor_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(is_suspected_vm_, other->is_suspected_vm_);
  swap(has_hypervisor_bit_, other->has_hypervisor_bit_);
  swap(is_hypervisor_guest_os_, other->is_hypervisor_guest_os_);
  swap(has_vm_execution_timing_, other->has_vm_execution_timing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Machine_VM::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Machine_Monitor::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Machine_Monitor::kNameFieldNumber;
const int Machine_Monitor::kHorizontalResolutionFieldNumber;
const int Machine_Monitor::kVerticalResolutionFieldNumber;
const int Machine_Monitor::kBitsPerColorFieldNumber;
const int Machine_Monitor::kRefreshRateFieldNumber;
const int Machine_Monitor::kDpiScalingPercentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Machine_Monitor::Machine_Monitor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_Monitor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.Machine.Monitor)
}
Machine_Monitor::Machine_Monitor(const Machine_Monitor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&horizontal_resolution_, &from.horizontal_resolution_,
    static_cast<size_t>(reinterpret_cast<char*>(&dpi_scaling_percent_) -
    reinterpret_cast<char*>(&horizontal_resolution_)) + sizeof(dpi_scaling_percent_));
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.Machine.Monitor)
}

void Machine_Monitor::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&horizontal_resolution_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dpi_scaling_percent_) -
      reinterpret_cast<char*>(&horizontal_resolution_)) + sizeof(dpi_scaling_percent_));
}

Machine_Monitor::~Machine_Monitor() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.Machine.Monitor)
  SharedDtor();
}

void Machine_Monitor::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Machine_Monitor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Machine_Monitor::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Machine_Monitor& Machine_Monitor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_Monitor.base);
  return *internal_default_instance();
}


void Machine_Monitor::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.Machine.Monitor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&horizontal_resolution_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&dpi_scaling_percent_) -
      reinterpret_cast<char*>(&horizontal_resolution_)) + sizeof(dpi_scaling_percent_));
  _internal_metadata_.Clear();
}

bool Machine_Monitor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.Machine.Monitor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.Monitor.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 horizontal_resolution = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &horizontal_resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vertical_resolution = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vertical_resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bits_per_color = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bits_per_color_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 refresh_rate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &refresh_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 dpi_scaling_percent = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dpi_scaling_percent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.Machine.Monitor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.Machine.Monitor)
  return false;
#undef DO_
}

void Machine_Monitor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.Machine.Monitor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.Monitor.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int32 horizontal_resolution = 2;
  if (this->horizontal_resolution() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->horizontal_resolution(), output);
  }

  // int32 vertical_resolution = 3;
  if (this->vertical_resolution() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->vertical_resolution(), output);
  }

  // int32 bits_per_color = 4;
  if (this->bits_per_color() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bits_per_color(), output);
  }

  // int32 refresh_rate = 5;
  if (this->refresh_rate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->refresh_rate(), output);
  }

  // int32 dpi_scaling_percent = 6;
  if (this->dpi_scaling_percent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->dpi_scaling_percent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.Machine.Monitor)
}

::google::protobuf::uint8* Machine_Monitor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.Machine.Monitor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.Monitor.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int32 horizontal_resolution = 2;
  if (this->horizontal_resolution() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->horizontal_resolution(), target);
  }

  // int32 vertical_resolution = 3;
  if (this->vertical_resolution() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->vertical_resolution(), target);
  }

  // int32 bits_per_color = 4;
  if (this->bits_per_color() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bits_per_color(), target);
  }

  // int32 refresh_rate = 5;
  if (this->refresh_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->refresh_rate(), target);
  }

  // int32 dpi_scaling_percent = 6;
  if (this->dpi_scaling_percent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->dpi_scaling_percent(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.Machine.Monitor)
  return target;
}

size_t Machine_Monitor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.Machine.Monitor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 horizontal_resolution = 2;
  if (this->horizontal_resolution() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->horizontal_resolution());
  }

  // int32 vertical_resolution = 3;
  if (this->vertical_resolution() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vertical_resolution());
  }

  // int32 bits_per_color = 4;
  if (this->bits_per_color() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bits_per_color());
  }

  // int32 refresh_rate = 5;
  if (this->refresh_rate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->refresh_rate());
  }

  // int32 dpi_scaling_percent = 6;
  if (this->dpi_scaling_percent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->dpi_scaling_percent());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Machine_Monitor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.Machine.Monitor)
  GOOGLE_DCHECK_NE(&from, this);
  const Machine_Monitor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Machine_Monitor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.Machine.Monitor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.Machine.Monitor)
    MergeFrom(*source);
  }
}

void Machine_Monitor::MergeFrom(const Machine_Monitor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.Machine.Monitor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.horizontal_resolution() != 0) {
    set_horizontal_resolution(from.horizontal_resolution());
  }
  if (from.vertical_resolution() != 0) {
    set_vertical_resolution(from.vertical_resolution());
  }
  if (from.bits_per_color() != 0) {
    set_bits_per_color(from.bits_per_color());
  }
  if (from.refresh_rate() != 0) {
    set_refresh_rate(from.refresh_rate());
  }
  if (from.dpi_scaling_percent() != 0) {
    set_dpi_scaling_percent(from.dpi_scaling_percent());
  }
}

void Machine_Monitor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.Machine.Monitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Machine_Monitor::CopyFrom(const Machine_Monitor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.Machine.Monitor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Machine_Monitor::IsInitialized() const {
  return true;
}

void Machine_Monitor::Swap(Machine_Monitor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Machine_Monitor::InternalSwap(Machine_Monitor* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(horizontal_resolution_, other->horizontal_resolution_);
  swap(vertical_resolution_, other->vertical_resolution_);
  swap(bits_per_color_, other->bits_per_color_);
  swap(refresh_rate_, other->refresh_rate_);
  swap(dpi_scaling_percent_, other->dpi_scaling_percent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Machine_Monitor::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Machine_GPU_Driver::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Machine_GPU_Driver::kDateFieldNumber;
const int Machine_GPU_Driver::kVendorFieldNumber;
const int Machine_GPU_Driver::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Machine_GPU_Driver::Machine_GPU_Driver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_GPU_Driver.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.Machine.GPU.Driver)
}
Machine_GPU_Driver::Machine_GPU_Driver(const Machine_GPU_Driver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.date().size() > 0) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vendor().size() > 0) {
    vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vendor_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.Machine.GPU.Driver)
}

void Machine_GPU_Driver::SharedCtor() {
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Machine_GPU_Driver::~Machine_GPU_Driver() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.Machine.GPU.Driver)
  SharedDtor();
}

void Machine_GPU_Driver::SharedDtor() {
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Machine_GPU_Driver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Machine_GPU_Driver::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Machine_GPU_Driver& Machine_GPU_Driver::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_GPU_Driver.base);
  return *internal_default_instance();
}


void Machine_GPU_Driver::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.Machine.GPU.Driver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vendor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Machine_GPU_Driver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.Machine.GPU.Driver)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string date = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), static_cast<int>(this->date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.GPU.Driver.date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string vendor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vendor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vendor().data(), static_cast<int>(this->vendor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.GPU.Driver.vendor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.GPU.Driver.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.Machine.GPU.Driver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.Machine.GPU.Driver)
  return false;
#undef DO_
}

void Machine_GPU_Driver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.Machine.GPU.Driver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string date = 1;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.GPU.Driver.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->date(), output);
  }

  // string vendor = 2;
  if (this->vendor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor().data(), static_cast<int>(this->vendor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.GPU.Driver.vendor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vendor(), output);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.GPU.Driver.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.Machine.GPU.Driver)
}

::google::protobuf::uint8* Machine_GPU_Driver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.Machine.GPU.Driver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string date = 1;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.GPU.Driver.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->date(), target);
  }

  // string vendor = 2;
  if (this->vendor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vendor().data(), static_cast<int>(this->vendor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.GPU.Driver.vendor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vendor(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.GPU.Driver.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.Machine.GPU.Driver)
  return target;
}

size_t Machine_GPU_Driver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.Machine.GPU.Driver)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string date = 1;
  if (this->date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // string vendor = 2;
  if (this->vendor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vendor());
  }

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Machine_GPU_Driver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.Machine.GPU.Driver)
  GOOGLE_DCHECK_NE(&from, this);
  const Machine_GPU_Driver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Machine_GPU_Driver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.Machine.GPU.Driver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.Machine.GPU.Driver)
    MergeFrom(*source);
  }
}

void Machine_GPU_Driver::MergeFrom(const Machine_GPU_Driver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.Machine.GPU.Driver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.vendor().size() > 0) {

    vendor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vendor_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void Machine_GPU_Driver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.Machine.GPU.Driver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Machine_GPU_Driver::CopyFrom(const Machine_GPU_Driver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.Machine.GPU.Driver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Machine_GPU_Driver::IsInitialized() const {
  return true;
}

void Machine_GPU_Driver::Swap(Machine_GPU_Driver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Machine_GPU_Driver::InternalSwap(Machine_GPU_Driver* other) {
  using std::swap;
  date_.Swap(&other->date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vendor_.Swap(&other->vendor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Machine_GPU_Driver::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Machine_GPU::InitAsDefaultInstance() {
  ::eve_public::app::platform::_Machine_GPU_default_instance_._instance.get_mutable()->driver_ = const_cast< ::eve_public::app::platform::Machine_GPU_Driver*>(
      ::eve_public::app::platform::Machine_GPU_Driver::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Machine_GPU::kDescriptionFieldNumber;
const int Machine_GPU::kVendorIdFieldNumber;
const int Machine_GPU::kDeviceIdFieldNumber;
const int Machine_GPU::kRevisionFieldNumber;
const int Machine_GPU::kVideoMemoryFieldNumber;
const int Machine_GPU::kDriverFieldNumber;
const int Machine_GPU::kCoreCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Machine_GPU::Machine_GPU()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_GPU.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.Machine.GPU)
}
Machine_GPU::Machine_GPU(const Machine_GPU& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_driver()) {
    driver_ = new ::eve_public::app::platform::Machine_GPU_Driver(*from.driver_);
  } else {
    driver_ = NULL;
  }
  ::memcpy(&vendor_id_, &from.vendor_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&core_count_) -
    reinterpret_cast<char*>(&vendor_id_)) + sizeof(core_count_));
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.Machine.GPU)
}

void Machine_GPU::SharedCtor() {
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&driver_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&core_count_) -
      reinterpret_cast<char*>(&driver_)) + sizeof(core_count_));
}

Machine_GPU::~Machine_GPU() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.Machine.GPU)
  SharedDtor();
}

void Machine_GPU::SharedDtor() {
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete driver_;
}

void Machine_GPU::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Machine_GPU::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Machine_GPU& Machine_GPU::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_GPU.base);
  return *internal_default_instance();
}


void Machine_GPU::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.Machine.GPU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && driver_ != NULL) {
    delete driver_;
  }
  driver_ = NULL;
  ::memset(&vendor_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&core_count_) -
      reinterpret_cast<char*>(&vendor_id_)) + sizeof(core_count_));
  _internal_metadata_.Clear();
}

bool Machine_GPU::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.Machine.GPU)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.GPU.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vendor_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vendor_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 device_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &device_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 revision = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &revision_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 video_memory = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &video_memory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.Machine.GPU.Driver driver = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_driver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 core_count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &core_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.Machine.GPU)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.Machine.GPU)
  return false;
#undef DO_
}

void Machine_GPU::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.Machine.GPU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.GPU.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->description(), output);
  }

  // int32 vendor_id = 2;
  if (this->vendor_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vendor_id(), output);
  }

  // int32 device_id = 3;
  if (this->device_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->device_id(), output);
  }

  // int32 revision = 4;
  if (this->revision() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->revision(), output);
  }

  // int64 video_memory = 5;
  if (this->video_memory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->video_memory(), output);
  }

  // .eve_public.app.platform.Machine.GPU.Driver driver = 6;
  if (this->has_driver()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_driver(), output);
  }

  // uint32 core_count = 7;
  if (this->core_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->core_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.Machine.GPU)
}

::google::protobuf::uint8* Machine_GPU::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.Machine.GPU)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string description = 1;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.GPU.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->description(), target);
  }

  // int32 vendor_id = 2;
  if (this->vendor_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vendor_id(), target);
  }

  // int32 device_id = 3;
  if (this->device_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->device_id(), target);
  }

  // int32 revision = 4;
  if (this->revision() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->revision(), target);
  }

  // int64 video_memory = 5;
  if (this->video_memory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->video_memory(), target);
  }

  // .eve_public.app.platform.Machine.GPU.Driver driver = 6;
  if (this->has_driver()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_driver(), deterministic, target);
  }

  // uint32 core_count = 7;
  if (this->core_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->core_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.Machine.GPU)
  return target;
}

size_t Machine_GPU::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.Machine.GPU)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string description = 1;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .eve_public.app.platform.Machine.GPU.Driver driver = 6;
  if (this->has_driver()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *driver_);
  }

  // int32 vendor_id = 2;
  if (this->vendor_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vendor_id());
  }

  // int32 device_id = 3;
  if (this->device_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->device_id());
  }

  // int64 video_memory = 5;
  if (this->video_memory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->video_memory());
  }

  // int32 revision = 4;
  if (this->revision() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->revision());
  }

  // uint32 core_count = 7;
  if (this->core_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->core_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Machine_GPU::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.Machine.GPU)
  GOOGLE_DCHECK_NE(&from, this);
  const Machine_GPU* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Machine_GPU>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.Machine.GPU)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.Machine.GPU)
    MergeFrom(*source);
  }
}

void Machine_GPU::MergeFrom(const Machine_GPU& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.Machine.GPU)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_driver()) {
    mutable_driver()->::eve_public::app::platform::Machine_GPU_Driver::MergeFrom(from.driver());
  }
  if (from.vendor_id() != 0) {
    set_vendor_id(from.vendor_id());
  }
  if (from.device_id() != 0) {
    set_device_id(from.device_id());
  }
  if (from.video_memory() != 0) {
    set_video_memory(from.video_memory());
  }
  if (from.revision() != 0) {
    set_revision(from.revision());
  }
  if (from.core_count() != 0) {
    set_core_count(from.core_count());
  }
}

void Machine_GPU::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.Machine.GPU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Machine_GPU::CopyFrom(const Machine_GPU& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.Machine.GPU)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Machine_GPU::IsInitialized() const {
  return true;
}

void Machine_GPU::Swap(Machine_GPU* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Machine_GPU::InternalSwap(Machine_GPU* other) {
  using std::swap;
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(driver_, other->driver_);
  swap(vendor_id_, other->vendor_id_);
  swap(device_id_, other->device_id_);
  swap(video_memory_, other->video_memory_);
  swap(revision_, other->revision_);
  swap(core_count_, other->core_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Machine_GPU::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Machine_NetworkAdapter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Machine_NetworkAdapter::kNameFieldNumber;
const int Machine_NetworkAdapter::kMacAddressFieldNumber;
const int Machine_NetworkAdapter::kUuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Machine_NetworkAdapter::Machine_NetworkAdapter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_NetworkAdapter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.Machine.NetworkAdapter)
}
Machine_NetworkAdapter::Machine_NetworkAdapter(const Machine_NetworkAdapter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mac_address().size() > 0) {
    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.Machine.NetworkAdapter)
}

void Machine_NetworkAdapter::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Machine_NetworkAdapter::~Machine_NetworkAdapter() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.Machine.NetworkAdapter)
  SharedDtor();
}

void Machine_NetworkAdapter::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Machine_NetworkAdapter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Machine_NetworkAdapter::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Machine_NetworkAdapter& Machine_NetworkAdapter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_NetworkAdapter.base);
  return *internal_default_instance();
}


void Machine_NetworkAdapter::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.Machine.NetworkAdapter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mac_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Machine_NetworkAdapter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.Machine.NetworkAdapter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.NetworkAdapter.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes mac_address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mac_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes uuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.Machine.NetworkAdapter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.Machine.NetworkAdapter)
  return false;
#undef DO_
}

void Machine_NetworkAdapter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.Machine.NetworkAdapter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.NetworkAdapter.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // bytes mac_address = 2;
  if (this->mac_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->mac_address(), output);
  }

  // bytes uuid = 3;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->uuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.Machine.NetworkAdapter)
}

::google::protobuf::uint8* Machine_NetworkAdapter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.Machine.NetworkAdapter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.NetworkAdapter.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // bytes mac_address = 2;
  if (this->mac_address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->mac_address(), target);
  }

  // bytes uuid = 3;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->uuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.Machine.NetworkAdapter)
  return target;
}

size_t Machine_NetworkAdapter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.Machine.NetworkAdapter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes mac_address = 2;
  if (this->mac_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mac_address());
  }

  // bytes uuid = 3;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Machine_NetworkAdapter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.Machine.NetworkAdapter)
  GOOGLE_DCHECK_NE(&from, this);
  const Machine_NetworkAdapter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Machine_NetworkAdapter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.Machine.NetworkAdapter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.Machine.NetworkAdapter)
    MergeFrom(*source);
  }
}

void Machine_NetworkAdapter::MergeFrom(const Machine_NetworkAdapter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.Machine.NetworkAdapter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.mac_address().size() > 0) {

    mac_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mac_address_);
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
}

void Machine_NetworkAdapter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.Machine.NetworkAdapter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Machine_NetworkAdapter::CopyFrom(const Machine_NetworkAdapter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.Machine.NetworkAdapter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Machine_NetworkAdapter::IsInitialized() const {
  return true;
}

void Machine_NetworkAdapter::Swap(Machine_NetworkAdapter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Machine_NetworkAdapter::InternalSwap(Machine_NetworkAdapter* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mac_address_.Swap(&other->mac_address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Machine_NetworkAdapter::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Machine_HardDrive::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Machine_HardDrive::kNameFieldNumber;
const int Machine_HardDrive::kDriveTypeFieldNumber;
const int Machine_HardDrive::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Machine_HardDrive::Machine_HardDrive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_HardDrive.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.Machine.HardDrive)
}
Machine_HardDrive::Machine_HardDrive(const Machine_HardDrive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&drive_type_) -
    reinterpret_cast<char*>(&size_)) + sizeof(drive_type_));
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.Machine.HardDrive)
}

void Machine_HardDrive::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drive_type_) -
      reinterpret_cast<char*>(&size_)) + sizeof(drive_type_));
}

Machine_HardDrive::~Machine_HardDrive() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.Machine.HardDrive)
  SharedDtor();
}

void Machine_HardDrive::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Machine_HardDrive::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Machine_HardDrive::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Machine_HardDrive& Machine_HardDrive::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine_HardDrive.base);
  return *internal_default_instance();
}


void Machine_HardDrive::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.Machine.HardDrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&drive_type_) -
      reinterpret_cast<char*>(&size_)) + sizeof(drive_type_));
  _internal_metadata_.Clear();
}

bool Machine_HardDrive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.Machine.HardDrive)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.HardDrive.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.Machine.HardDrive.DriveType drive_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_drive_type(static_cast< ::eve_public::app::platform::Machine_HardDrive_DriveType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.Machine.HardDrive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.Machine.HardDrive)
  return false;
#undef DO_
}

void Machine_HardDrive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.Machine.HardDrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.HardDrive.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .eve_public.app.platform.Machine.HardDrive.DriveType drive_type = 2;
  if (this->drive_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->drive_type(), output);
  }

  // uint64 size = 3;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.Machine.HardDrive)
}

::google::protobuf::uint8* Machine_HardDrive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.Machine.HardDrive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.HardDrive.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .eve_public.app.platform.Machine.HardDrive.DriveType drive_type = 2;
  if (this->drive_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->drive_type(), target);
  }

  // uint64 size = 3;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.Machine.HardDrive)
  return target;
}

size_t Machine_HardDrive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.Machine.HardDrive)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint64 size = 3;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  // .eve_public.app.platform.Machine.HardDrive.DriveType drive_type = 2;
  if (this->drive_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->drive_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Machine_HardDrive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.Machine.HardDrive)
  GOOGLE_DCHECK_NE(&from, this);
  const Machine_HardDrive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Machine_HardDrive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.Machine.HardDrive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.Machine.HardDrive)
    MergeFrom(*source);
  }
}

void Machine_HardDrive::MergeFrom(const Machine_HardDrive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.Machine.HardDrive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.drive_type() != 0) {
    set_drive_type(from.drive_type());
  }
}

void Machine_HardDrive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.Machine.HardDrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Machine_HardDrive::CopyFrom(const Machine_HardDrive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.Machine.HardDrive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Machine_HardDrive::IsInitialized() const {
  return true;
}

void Machine_HardDrive::Swap(Machine_HardDrive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Machine_HardDrive::InternalSwap(Machine_HardDrive* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  swap(drive_type_, other->drive_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Machine_HardDrive::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Machine::InitAsDefaultInstance() {
  ::eve_public::app::platform::_Machine_default_instance_._instance.get_mutable()->cpu_ = const_cast< ::eve_public::app::platform::Machine_CPU*>(
      ::eve_public::app::platform::Machine_CPU::internal_default_instance());
  ::eve_public::app::platform::_Machine_default_instance_._instance.get_mutable()->vm_ = const_cast< ::eve_public::app::platform::Machine_VM*>(
      ::eve_public::app::platform::Machine_VM::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Machine::kModelFieldNumber;
const int Machine::kNameFieldNumber;
const int Machine::kUuidFieldNumber;
const int Machine::kTotalMemoryFieldNumber;
const int Machine::kMonitorCountFieldNumber;
const int Machine::kCpuFieldNumber;
const int Machine::kVmFieldNumber;
const int Machine::kMonitorsFieldNumber;
const int Machine::kGpusFieldNumber;
const int Machine::kNetworkAdaptersFieldNumber;
const int Machine::kBatteryDetectionFieldNumber;
const int Machine::kHardDrivesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Machine::Machine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.Machine)
}
Machine::Machine(const Machine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      monitors_(from.monitors_),
      gpus_(from.gpus_),
      network_adapters_(from.network_adapters_),
      hard_drives_(from.hard_drives_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.model().size() > 0) {
    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uuid().size() > 0) {
    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_cpu()) {
    cpu_ = new ::eve_public::app::platform::Machine_CPU(*from.cpu_);
  } else {
    cpu_ = NULL;
  }
  if (from.has_vm()) {
    vm_ = new ::eve_public::app::platform::Machine_VM(*from.vm_);
  } else {
    vm_ = NULL;
  }
  ::memcpy(&total_memory_, &from.total_memory_,
    static_cast<size_t>(reinterpret_cast<char*>(&battery_detection_) -
    reinterpret_cast<char*>(&total_memory_)) + sizeof(battery_detection_));
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.Machine)
}

void Machine::SharedCtor() {
  model_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cpu_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battery_detection_) -
      reinterpret_cast<char*>(&cpu_)) + sizeof(battery_detection_));
}

Machine::~Machine() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.Machine)
  SharedDtor();
}

void Machine::SharedDtor() {
  model_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete cpu_;
  if (this != internal_default_instance()) delete vm_;
}

void Machine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Machine::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Machine& Machine::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Machine.base);
  return *internal_default_instance();
}


void Machine::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.Machine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  monitors_.Clear();
  gpus_.Clear();
  network_adapters_.Clear();
  hard_drives_.Clear();
  model_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && cpu_ != NULL) {
    delete cpu_;
  }
  cpu_ = NULL;
  if (GetArenaNoVirtual() == NULL && vm_ != NULL) {
    delete vm_;
  }
  vm_ = NULL;
  ::memset(&total_memory_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&battery_detection_) -
      reinterpret_cast<char*>(&total_memory_)) + sizeof(battery_detection_));
  _internal_metadata_.Clear();
}

bool Machine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.Machine)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string model = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->model().data(), static_cast<int>(this->model().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.model"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "eve_public.app.platform.Machine.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes uuid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_uuid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 total_memory = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_memory_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 monitor_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &monitor_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.Machine.CPU cpu = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.Machine.VM vm = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .eve_public.app.platform.Machine.Monitor monitors = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_monitors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .eve_public.app.platform.Machine.GPU gpus = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_gpus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .eve_public.app.platform.Machine.NetworkAdapter network_adapters = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_network_adapters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.Machine.BatteryDetection battery_detection = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_battery_detection(static_cast< ::eve_public::app::platform::Machine_BatteryDetection >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .eve_public.app.platform.Machine.HardDrive hard_drives = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hard_drives()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.Machine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.Machine)
  return false;
#undef DO_
}

void Machine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.Machine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string model = 1;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.model");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->model(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // bytes uuid = 3;
  if (this->uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->uuid(), output);
  }

  // int64 total_memory = 4;
  if (this->total_memory() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->total_memory(), output);
  }

  // int32 monitor_count = 5;
  if (this->monitor_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->monitor_count(), output);
  }

  // .eve_public.app.platform.Machine.CPU cpu = 6;
  if (this->has_cpu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_cpu(), output);
  }

  // .eve_public.app.platform.Machine.VM vm = 7;
  if (this->has_vm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_vm(), output);
  }

  // repeated .eve_public.app.platform.Machine.Monitor monitors = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monitors_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->monitors(static_cast<int>(i)),
      output);
  }

  // repeated .eve_public.app.platform.Machine.GPU gpus = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gpus_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->gpus(static_cast<int>(i)),
      output);
  }

  // repeated .eve_public.app.platform.Machine.NetworkAdapter network_adapters = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->network_adapters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->network_adapters(static_cast<int>(i)),
      output);
  }

  // .eve_public.app.platform.Machine.BatteryDetection battery_detection = 11;
  if (this->battery_detection() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->battery_detection(), output);
  }

  // repeated .eve_public.app.platform.Machine.HardDrive hard_drives = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hard_drives_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->hard_drives(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.Machine)
}

::google::protobuf::uint8* Machine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.Machine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string model = 1;
  if (this->model().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->model().data(), static_cast<int>(this->model().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.model");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->model(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "eve_public.app.platform.Machine.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // bytes uuid = 3;
  if (this->uuid().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->uuid(), target);
  }

  // int64 total_memory = 4;
  if (this->total_memory() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->total_memory(), target);
  }

  // int32 monitor_count = 5;
  if (this->monitor_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->monitor_count(), target);
  }

  // .eve_public.app.platform.Machine.CPU cpu = 6;
  if (this->has_cpu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_cpu(), deterministic, target);
  }

  // .eve_public.app.platform.Machine.VM vm = 7;
  if (this->has_vm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_vm(), deterministic, target);
  }

  // repeated .eve_public.app.platform.Machine.Monitor monitors = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monitors_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->monitors(static_cast<int>(i)), deterministic, target);
  }

  // repeated .eve_public.app.platform.Machine.GPU gpus = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gpus_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->gpus(static_cast<int>(i)), deterministic, target);
  }

  // repeated .eve_public.app.platform.Machine.NetworkAdapter network_adapters = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->network_adapters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->network_adapters(static_cast<int>(i)), deterministic, target);
  }

  // .eve_public.app.platform.Machine.BatteryDetection battery_detection = 11;
  if (this->battery_detection() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->battery_detection(), target);
  }

  // repeated .eve_public.app.platform.Machine.HardDrive hard_drives = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hard_drives_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->hard_drives(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.Machine)
  return target;
}

size_t Machine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.Machine)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .eve_public.app.platform.Machine.Monitor monitors = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->monitors_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->monitors(static_cast<int>(i)));
    }
  }

  // repeated .eve_public.app.platform.Machine.GPU gpus = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->gpus_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gpus(static_cast<int>(i)));
    }
  }

  // repeated .eve_public.app.platform.Machine.NetworkAdapter network_adapters = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->network_adapters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->network_adapters(static_cast<int>(i)));
    }
  }

  // repeated .eve_public.app.platform.Machine.HardDrive hard_drives = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->hard_drives_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hard_drives(static_cast<int>(i)));
    }
  }

  // string model = 1;
  if (this->model().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // bytes uuid = 3;
  if (this->uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->uuid());
  }

  // .eve_public.app.platform.Machine.CPU cpu = 6;
  if (this->has_cpu()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cpu_);
  }

  // .eve_public.app.platform.Machine.VM vm = 7;
  if (this->has_vm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *vm_);
  }

  // int64 total_memory = 4;
  if (this->total_memory() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_memory());
  }

  // int32 monitor_count = 5;
  if (this->monitor_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->monitor_count());
  }

  // .eve_public.app.platform.Machine.BatteryDetection battery_detection = 11;
  if (this->battery_detection() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->battery_detection());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Machine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.Machine)
  GOOGLE_DCHECK_NE(&from, this);
  const Machine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Machine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.Machine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.Machine)
    MergeFrom(*source);
  }
}

void Machine::MergeFrom(const Machine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.Machine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  monitors_.MergeFrom(from.monitors_);
  gpus_.MergeFrom(from.gpus_);
  network_adapters_.MergeFrom(from.network_adapters_);
  hard_drives_.MergeFrom(from.hard_drives_);
  if (from.model().size() > 0) {

    model_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.uuid().size() > 0) {

    uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uuid_);
  }
  if (from.has_cpu()) {
    mutable_cpu()->::eve_public::app::platform::Machine_CPU::MergeFrom(from.cpu());
  }
  if (from.has_vm()) {
    mutable_vm()->::eve_public::app::platform::Machine_VM::MergeFrom(from.vm());
  }
  if (from.total_memory() != 0) {
    set_total_memory(from.total_memory());
  }
  if (from.monitor_count() != 0) {
    set_monitor_count(from.monitor_count());
  }
  if (from.battery_detection() != 0) {
    set_battery_detection(from.battery_detection());
  }
}

void Machine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.Machine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Machine::CopyFrom(const Machine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.Machine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Machine::IsInitialized() const {
  return true;
}

void Machine::Swap(Machine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Machine::InternalSwap(Machine* other) {
  using std::swap;
  CastToBase(&monitors_)->InternalSwap(CastToBase(&other->monitors_));
  CastToBase(&gpus_)->InternalSwap(CastToBase(&other->gpus_));
  CastToBase(&network_adapters_)->InternalSwap(CastToBase(&other->network_adapters_));
  CastToBase(&hard_drives_)->InternalSwap(CastToBase(&other->hard_drives_));
  model_.Swap(&other->model_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uuid_.Swap(&other->uuid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cpu_, other->cpu_);
  swap(vm_, other->vm_);
  swap(total_memory_, other->total_memory_);
  swap(monitor_count_, other->monitor_count_);
  swap(battery_detection_, other->battery_detection_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Machine::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Process::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Process::kRunningUnderRosettaFieldNumber;
const int Process::kBitnessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Process::Process()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Process.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.Process)
}
Process::Process(const Process& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&running_under_rosetta_, &from.running_under_rosetta_,
    static_cast<size_t>(reinterpret_cast<char*>(&bitness_) -
    reinterpret_cast<char*>(&running_under_rosetta_)) + sizeof(bitness_));
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.Process)
}

void Process::SharedCtor() {
  ::memset(&running_under_rosetta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bitness_) -
      reinterpret_cast<char*>(&running_under_rosetta_)) + sizeof(bitness_));
}

Process::~Process() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.Process)
  SharedDtor();
}

void Process::SharedDtor() {
}

void Process::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Process::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Process& Process::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Process.base);
  return *internal_default_instance();
}


void Process::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.Process)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&running_under_rosetta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bitness_) -
      reinterpret_cast<char*>(&running_under_rosetta_)) + sizeof(bitness_));
  _internal_metadata_.Clear();
}

bool Process::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.Process)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool running_under_rosetta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &running_under_rosetta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.Bitness bitness = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bitness(static_cast< ::eve_public::app::platform::Bitness >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.Process)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.Process)
  return false;
#undef DO_
}

void Process::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.Process)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool running_under_rosetta = 1;
  if (this->running_under_rosetta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->running_under_rosetta(), output);
  }

  // .eve_public.app.platform.Bitness bitness = 2;
  if (this->bitness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->bitness(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.Process)
}

::google::protobuf::uint8* Process::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.Process)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool running_under_rosetta = 1;
  if (this->running_under_rosetta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->running_under_rosetta(), target);
  }

  // .eve_public.app.platform.Bitness bitness = 2;
  if (this->bitness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->bitness(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.Process)
  return target;
}

size_t Process::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.Process)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool running_under_rosetta = 1;
  if (this->running_under_rosetta() != 0) {
    total_size += 1 + 1;
  }

  // .eve_public.app.platform.Bitness bitness = 2;
  if (this->bitness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bitness());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Process::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.Process)
  GOOGLE_DCHECK_NE(&from, this);
  const Process* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Process>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.Process)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.Process)
    MergeFrom(*source);
  }
}

void Process::MergeFrom(const Process& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.Process)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.running_under_rosetta() != 0) {
    set_running_under_rosetta(from.running_under_rosetta());
  }
  if (from.bitness() != 0) {
    set_bitness(from.bitness());
  }
}

void Process::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.Process)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process::CopyFrom(const Process& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.Process)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process::IsInitialized() const {
  return true;
}

void Process::Swap(Process* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Process::InternalSwap(Process* other) {
  using std::swap;
  swap(running_under_rosetta_, other->running_under_rosetta_);
  swap(bitness_, other->bitness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Process::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Information::InitAsDefaultInstance() {
  ::eve_public::app::platform::_Information_default_instance_._instance.get_mutable()->version_ = const_cast< ::eve_public::app::platform::SemanticVersion*>(
      ::eve_public::app::platform::SemanticVersion::internal_default_instance());
  ::eve_public::app::platform::_Information_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::eve_public::app::platform::_Information_default_instance_._instance.get_mutable()->os_ = const_cast< ::eve_public::app::platform::OS*>(
      ::eve_public::app::platform::OS::internal_default_instance());
  ::eve_public::app::platform::_Information_default_instance_._instance.get_mutable()->machine_ = const_cast< ::eve_public::app::platform::Machine*>(
      ::eve_public::app::platform::Machine::internal_default_instance());
  ::eve_public::app::platform::_Information_default_instance_._instance.get_mutable()->process_ = const_cast< ::eve_public::app::platform::Process*>(
      ::eve_public::app::platform::Process::internal_default_instance());
}
void Information::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Information::kVersionFieldNumber;
const int Information::kTimestampFieldNumber;
const int Information::kProcessBitnessFieldNumber;
const int Information::kOsFieldNumber;
const int Information::kMachineFieldNumber;
const int Information::kProcessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Information::Information()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Information.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:eve_public.app.platform.Information)
}
Information::Information(const Information& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_version()) {
    version_ = new ::eve_public::app::platform::SemanticVersion(*from.version_);
  } else {
    version_ = NULL;
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  if (from.has_os()) {
    os_ = new ::eve_public::app::platform::OS(*from.os_);
  } else {
    os_ = NULL;
  }
  if (from.has_machine()) {
    machine_ = new ::eve_public::app::platform::Machine(*from.machine_);
  } else {
    machine_ = NULL;
  }
  if (from.has_process()) {
    process_ = new ::eve_public::app::platform::Process(*from.process_);
  } else {
    process_ = NULL;
  }
  process_bitness_ = from.process_bitness_;
  // @@protoc_insertion_point(copy_constructor:eve_public.app.platform.Information)
}

void Information::SharedCtor() {
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&process_bitness_) -
      reinterpret_cast<char*>(&version_)) + sizeof(process_bitness_));
}

Information::~Information() {
  // @@protoc_insertion_point(destructor:eve_public.app.platform.Information)
  SharedDtor();
}

void Information::SharedDtor() {
  if (this != internal_default_instance()) delete version_;
  if (this != internal_default_instance()) delete timestamp_;
  if (this != internal_default_instance()) delete os_;
  if (this != internal_default_instance()) delete machine_;
  if (this != internal_default_instance()) delete process_;
}

void Information::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Information::descriptor() {
  ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Information& Information::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::scc_info_Information.base);
  return *internal_default_instance();
}


void Information::Clear() {
// @@protoc_insertion_point(message_clear_start:eve_public.app.platform.Information)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && version_ != NULL) {
    delete version_;
  }
  version_ = NULL;
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && os_ != NULL) {
    delete os_;
  }
  os_ = NULL;
  if (GetArenaNoVirtual() == NULL && machine_ != NULL) {
    delete machine_;
  }
  machine_ = NULL;
  if (GetArenaNoVirtual() == NULL && process_ != NULL) {
    delete process_;
  }
  process_ = NULL;
  process_bitness_ = 0;
  _internal_metadata_.Clear();
}

bool Information::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:eve_public.app.platform.Information)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .eve_public.app.platform.SemanticVersion version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.Bitness process_bitness = 3 [deprecated = true];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_process_bitness(static_cast< ::eve_public::app::platform::Bitness >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.OS os = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_os()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.Machine machine = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_machine()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .eve_public.app.platform.Process process = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_process()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:eve_public.app.platform.Information)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:eve_public.app.platform.Information)
  return false;
#undef DO_
}

void Information::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:eve_public.app.platform.Information)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_public.app.platform.SemanticVersion version = 1;
  if (this->has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_version(), output);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_timestamp(), output);
  }

  // .eve_public.app.platform.Bitness process_bitness = 3 [deprecated = true];
  if (this->process_bitness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->process_bitness(), output);
  }

  // .eve_public.app.platform.OS os = 4;
  if (this->has_os()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_os(), output);
  }

  // .eve_public.app.platform.Machine machine = 5;
  if (this->has_machine()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_machine(), output);
  }

  // .eve_public.app.platform.Process process = 6;
  if (this->has_process()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_process(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:eve_public.app.platform.Information)
}

::google::protobuf::uint8* Information::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:eve_public.app.platform.Information)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .eve_public.app.platform.SemanticVersion version = 1;
  if (this->has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_version(), deterministic, target);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_timestamp(), deterministic, target);
  }

  // .eve_public.app.platform.Bitness process_bitness = 3 [deprecated = true];
  if (this->process_bitness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->process_bitness(), target);
  }

  // .eve_public.app.platform.OS os = 4;
  if (this->has_os()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_os(), deterministic, target);
  }

  // .eve_public.app.platform.Machine machine = 5;
  if (this->has_machine()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_machine(), deterministic, target);
  }

  // .eve_public.app.platform.Process process = 6;
  if (this->has_process()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_process(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:eve_public.app.platform.Information)
  return target;
}

size_t Information::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:eve_public.app.platform.Information)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .eve_public.app.platform.SemanticVersion version = 1;
  if (this->has_version()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *version_);
  }

  // .google.protobuf.Timestamp timestamp = 2;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // .eve_public.app.platform.OS os = 4;
  if (this->has_os()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *os_);
  }

  // .eve_public.app.platform.Machine machine = 5;
  if (this->has_machine()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *machine_);
  }

  // .eve_public.app.platform.Process process = 6;
  if (this->has_process()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *process_);
  }

  // .eve_public.app.platform.Bitness process_bitness = 3 [deprecated = true];
  if (this->process_bitness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->process_bitness());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Information::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:eve_public.app.platform.Information)
  GOOGLE_DCHECK_NE(&from, this);
  const Information* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Information>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:eve_public.app.platform.Information)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:eve_public.app.platform.Information)
    MergeFrom(*source);
  }
}

void Information::MergeFrom(const Information& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:eve_public.app.platform.Information)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_version()) {
    mutable_version()->::eve_public::app::platform::SemanticVersion::MergeFrom(from.version());
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.has_os()) {
    mutable_os()->::eve_public::app::platform::OS::MergeFrom(from.os());
  }
  if (from.has_machine()) {
    mutable_machine()->::eve_public::app::platform::Machine::MergeFrom(from.machine());
  }
  if (from.has_process()) {
    mutable_process()->::eve_public::app::platform::Process::MergeFrom(from.process());
  }
  if (from.process_bitness() != 0) {
    set_process_bitness(from.process_bitness());
  }
}

void Information::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:eve_public.app.platform.Information)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Information::CopyFrom(const Information& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:eve_public.app.platform.Information)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Information::IsInitialized() const {
  return true;
}

void Information::Swap(Information* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Information::InternalSwap(Information* other) {
  using std::swap;
  swap(version_, other->version_);
  swap(timestamp_, other->timestamp_);
  swap(os_, other->os_);
  swap(machine_, other->machine_);
  swap(process_, other->process_);
  swap(process_bitness_, other->process_bitness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Information::GetMetadata() const {
  protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_eve_5fpublic_2fapp_2fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace platform
}  // namespace app
}  // namespace eve_public
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::SemanticVersion* Arena::CreateMaybeMessage< ::eve_public::app::platform::SemanticVersion >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::SemanticVersion >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::OS_GraphicsAPIs* Arena::CreateMaybeMessage< ::eve_public::app::platform::OS_GraphicsAPIs >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::OS_GraphicsAPIs >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::OS_Wine* Arena::CreateMaybeMessage< ::eve_public::app::platform::OS_Wine >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::OS_Wine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::OS_StreamingService* Arena::CreateMaybeMessage< ::eve_public::app::platform::OS_StreamingService >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::OS_StreamingService >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::OS* Arena::CreateMaybeMessage< ::eve_public::app::platform::OS >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::OS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::Machine_CPU* Arena::CreateMaybeMessage< ::eve_public::app::platform::Machine_CPU >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::Machine_CPU >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::Machine_VM* Arena::CreateMaybeMessage< ::eve_public::app::platform::Machine_VM >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::Machine_VM >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::Machine_Monitor* Arena::CreateMaybeMessage< ::eve_public::app::platform::Machine_Monitor >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::Machine_Monitor >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::Machine_GPU_Driver* Arena::CreateMaybeMessage< ::eve_public::app::platform::Machine_GPU_Driver >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::Machine_GPU_Driver >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::Machine_GPU* Arena::CreateMaybeMessage< ::eve_public::app::platform::Machine_GPU >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::Machine_GPU >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::Machine_NetworkAdapter* Arena::CreateMaybeMessage< ::eve_public::app::platform::Machine_NetworkAdapter >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::Machine_NetworkAdapter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::Machine_HardDrive* Arena::CreateMaybeMessage< ::eve_public::app::platform::Machine_HardDrive >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::Machine_HardDrive >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::Machine* Arena::CreateMaybeMessage< ::eve_public::app::platform::Machine >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::Machine >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::Process* Arena::CreateMaybeMessage< ::eve_public::app::platform::Process >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::Process >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::eve_public::app::platform::Information* Arena::CreateMaybeMessage< ::eve_public::app::platform::Information >(Arena* arena) {
  return Arena::CreateInternal< ::eve_public::app::platform::Information >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
